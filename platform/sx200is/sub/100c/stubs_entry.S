// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

NSTUB(AllocateMemory, 0xffa6954c)
NSTUB(AllocateUncacheableMemory, 0xff82780c)
NSTUB(Close, 0xff823cf0)
NSTUB(CreateTask, 0xff81afac)
NSTUB(DeleteFile_Fut, 0xff82359c)
// ERROR: EnterToCompensationEVF is not found!
NSTUB(ExecuteEventProcedure, 0xff87057c)
// ERROR: ExitFromCompensationEVF is not found!
// Best match: 57%
NSTUB(ExitTask, 0xff81b23c)
NSTUB(Fclose_Fut, 0xff823718)
NSTUB(Feof_Fut, 0xff823904)
NSTUB(Fflush_Fut, 0xff823940)
NSTUB(Fgets_Fut, 0xff82386c)
NSTUB(Fopen_Fut, 0xff8236d8)
NSTUB(Fread_Fut, 0xff8237c4)
NSTUB(FreeMemory, 0xffa69544)
// Best match: 91%
NSTUB(FreeUncacheableMemory, 0xff82784c)
NSTUB(Fseek_Fut, 0xff8238b8)
NSTUB(Fwrite_Fut, 0xff823818)
// Best match: 52%
NSTUB(GetBatteryTemperature, 0xff84b5a8)
// Best match: 52%
NSTUB(GetCCDTemperature, 0xff84b534)
// Best match: 88%
NSTUB(GetCurrentAvValue, 0xff931328)
// ERROR: GetDrive_ClusterSize is not found!
// ERROR: GetDrive_FreeClusters is not found!
// ERROR: GetDrive_TotalClusters is not found!
// ERROR: GetFocusLensSubjectDistance is not found!
// Best match: 77%
NSTUB(GetFocusLensSubjectDistanceFromLens, 0xff92fbc0)
// Best match: 96%
NSTUB(GetOpticalTemperature, 0xff84b61c)
// Best match: 96%
NSTUB(GetParameterData, 0xff9632e0)
// Best match: 86%
NSTUB(GetPropertyCase, 0xff8742e8)
// Best match: 96%
NSTUB(GetSystemTime, 0xffa695a4)
// Best match: 74%
NSTUB(GetZoomLensCurrentPoint, 0xff93462c)
// Best match: 75%
NSTUB(GetZoomLensCurrentPosition, 0xffa5cb24)
// Best match: 77%
NSTUB(IsStrobeChargeCompleted, 0xff8abb04)
NSTUB(LocalTime, 0xff86df6c)
// Best match: 93%
NSTUB(LockMainPower, 0xff87bce0)
NSTUB(Lseek, 0xff823e30)
// Best match: 92%
NSTUB(MakeDirectory_Fut, 0xff823610)
// Best match: 69%
NSTUB(MoveFocusLensToDistance, 0xffac3188)
// Best match: 58%
NSTUB(MoveZoomLensWithPoint, 0xffa67c24)
// Best match: 62%
NSTUB(NewTaskShell, 0xff873d8c)
NSTUB(Open, 0xff823cc8)
// Best match: 53%
NSTUB(PB2Rec, 0xff87ee10)
// ALT: NSTUB(PB2Rec, 0xff87ee20) // 14/13
// Best match: 72%
NSTUB(PT_PlaySound, 0xff86046c)
// Best match: 86%
NSTUB(PostLogicalEventForNotPowerType, 0xff879a08)
// Best match: 92%
NSTUB(PostLogicalEventToUI, 0xff879a54)
NSTUB(Read, 0xff819ae4)
NSTUB(ReadFastDir, 0xffa4794c)
// Best match: 86%
NSTUB(Rec2PB, 0xff87ee50)
// ERROR: RefreshPhysicalScreen is not found!
NSTUB(Remove, 0xff823d38)
// Best match: 93%
NSTUB(RenameFile_Fut, 0xff823548)
NSTUB(Restart, 0xff828f5c)
// Best match: 93%
NSTUB(SetAutoShutdownTime, 0xff87bd54)
// Best match: 81%
NSTUB(SetCurrentCaptureModeType, 0xff882d6c)
NSTUB(SetFileTimeStamp, 0xff823fcc)
// Best match: 64%
NSTUB(SetLogicalEventActive, 0xff87ba30)
// Best match: 96%
NSTUB(SetParameterData, 0xff963250)
// Best match: 86%
NSTUB(SetPropertyCase, 0xff8741e0)
// Best match: 92%
NSTUB(SleepTask, 0xff827490)
// Best match: 60%
NSTUB(TakeSemaphore, 0xff827158)
// ERROR: TurnOffBackLight is not found!
// Best match: 54%
NSTUB(TurnOnBackLight, 0xff88923c)
// Best match: 51%
NSTUB(UIFS_WriteFirmInfoToFile, 0xff94f9d8)
// Best match: 93%
NSTUB(UnlockMainPower, 0xff87bc34)
// Best match: 89%
NSTUB(UpdateMBROnFlash, 0xff857924)
// Best match: 85%
NSTUB(VbattGet, 0xff820644)
NSTUB(Write, 0xff823d9c)
NSTUB(_log, 0xffafa3c0)
NSTUB(_log10, 0xffaf904c)
NSTUB(_pow, 0xffaf91bc)
NSTUB(_sqrt, 0xffafbf64)
NSTUB(add_ptp_handler, 0xffa125d4)
NSTUB(close, 0xff8198fc)
NSTUB(closedir, 0xffa47a1c)
NSTUB(closefastdir, 0xffa47a1c)
NSTUB(free, 0xff813a3c)
// Best match: 86%
NSTUB(kbd_p1_f, 0xff821ea0)
// Best match: 86%
NSTUB(kbd_p1_f_cont, 0xff821eac)
// Best match: 86%
NSTUB(kbd_p2_f, 0xff821760)
// ERROR: kbd_pwr_off is not found!
// ERROR: kbd_pwr_on is not found!
// Best match: 84%
NSTUB(kbd_read_keys, 0xff821e24)
// Best match: 78%
NSTUB(kbd_read_keys_r2, 0xff847b20)
// ALT: NSTUB(kbd_read_keys_r2, 0xff847b04) // 17/5
NSTUB(lseek, 0xff823e30)
NSTUB(malloc, 0xff813968)
NSTUB(memcmp, 0xff81cc5c)
NSTUB(memcpy, 0xff88fe10)
NSTUB(memset, 0xff9d7458)
NSTUB(mkdir, 0xff824094)
NSTUB(mktime_ext, 0xff89067c)
NSTUB(open, 0xff81984c)
NSTUB(opendir, 0xffa478b8)
NSTUB(openfastdir, 0xffa478b8)
// Best match: 56%
NSTUB(qsort, 0xff9d7498)
// Best match: 95%
NSTUB(rand, 0xff81cd64)
NSTUB(read, 0xff819ae4)
NSTUB(readfastdir, 0xffa4794c)
// Best match: 86%
NSTUB(reboot_fw_update, 0xffa4effc)
NSTUB(rename, 0xff823dc4)
// Best match: 93%
NSTUB(set_control_event, 0xff87b694)
// Best match: 95%
NSTUB(srand, 0xff81cd58)
NSTUB(stat, 0xff823efc)
NSTUB(strcat, 0xff88fc24)
// ERROR: strchr is not found!
NSTUB(strcmp, 0xff81cbf4)
NSTUB(strcpy, 0xff81cbdc)
NSTUB(strftime, 0xff890084)
NSTUB(strlen, 0xff81cc38)
// Best match: 85%
NSTUB(strncmp, 0xff88fc60)
NSTUB(strncpy, 0xff82d1bc)
// Best match: 80%
NSTUB(strrchr, 0xff88fca8)
NSTUB(strtol, 0xff82d3f4)
NSTUB(strtolx, 0xff82d1f8)
// Best match: 86%
NSTUB(time, 0xff86e4e4)
NSTUB(vsprintf, 0xff81cba0)
NSTUB(write, 0xff819b44)
