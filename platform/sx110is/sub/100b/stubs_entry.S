// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

NSTUB(AllocateMemory, 0xffe08340)
NSTUB(AllocateUncacheableMemory, 0xffc17828)
NSTUB(Close, 0xffc13348)
NSTUB(CreateTask, 0xffc0b8c0)
NSTUB(DeleteFile_Fut, 0xffc12bf4)
// ERROR: EnterToCompensationEVF is not found!
NSTUB(ExecuteEventProcedure, 0xffc5b630)
// ERROR: ExitFromCompensationEVF is not found!
NSTUB(ExitTask, 0xffc0bb50)
NSTUB(Fclose_Fut, 0xffc12d70)
NSTUB(Feof_Fut, 0xffc12f5c)
NSTUB(Fflush_Fut, 0xffc12f98)
NSTUB(Fgets_Fut, 0xffc12ec4)
NSTUB(Fopen_Fut, 0xffc12d30)
NSTUB(Fread_Fut, 0xffc12e1c)
NSTUB(FreeMemory, 0xffe08338)
// Best match: 91%
NSTUB(FreeUncacheableMemory, 0xffc17868)
NSTUB(Fseek_Fut, 0xffc12f10)
NSTUB(Fwrite_Fut, 0xffc12e70)
NSTUB(GetBatteryTemperature, 0xffc3885c)
NSTUB(GetCCDTemperature, 0xffc387ec)
// Best match: 88%
NSTUB(GetCurrentAvValue, 0xffd0f3d4)
// Best match: 55%
NSTUB(GetDrive_ClusterSize, 0xffc44dcc)
// ALT: NSTUB(GetDrive_ClusterSize, 0xffc44e00) // 15/12
// ALT: NSTUB(GetDrive_ClusterSize, 0xffc44e34) // 15/12
// ALT: NSTUB(GetDrive_ClusterSize, 0xffc44dcc) // 14/12
// ALT: NSTUB(GetDrive_ClusterSize, 0xffc44e68) // 14/12
// Best match: 62%
NSTUB(GetDrive_FreeClusters, 0xffc44dcc)
// Best match: 55%
NSTUB(GetDrive_TotalClusters, 0xffc44dcc)
// ALT: NSTUB(GetDrive_TotalClusters, 0xffc44e00) // 15/12
// ALT: NSTUB(GetDrive_TotalClusters, 0xffc44e34) // 15/12
// Best match: 64%
NSTUB(GetFocusLensSubjectDistance, 0xffd0d8d4)
// Best match: 77%
NSTUB(GetFocusLensSubjectDistanceFromLens, 0xffd0dbe0)
// Best match: 96%
NSTUB(GetOpticalTemperature, 0xffc388cc)
// Best match: 96%
NSTUB(GetParameterData, 0xffd38978)
// Best match: 72%
NSTUB(GetPropertyCase, 0xffc5f2a0)
NSTUB(GetSystemTime, 0xffe08398)
// Best match: 74%
NSTUB(GetZoomLensCurrentPoint, 0xffd12370)
NSTUB(GetZoomLensCurrentPosition, 0xffe02890)
// Best match: 67%
NSTUB(IsStrobeChargeCompleted, 0xffc92e08)
NSTUB(LocalTime, 0xffc595bc)
// Best match: 93%
NSTUB(LockMainPower, 0xffc63da0)
NSTUB(Lseek, 0xffc13488)
// Best match: 92%
NSTUB(MakeDirectory_Fut, 0xffc12c68)
// Best match: 69%
NSTUB(MoveFocusLensToDistance, 0xffe5b264)
// Best match: 58%
NSTUB(MoveZoomLensWithPoint, 0xffe0507c)
// Best match: 62%
NSTUB(NewTaskShell, 0xffc5ed48)
NSTUB(Open, 0xffc13320)
// Best match: 72%
NSTUB(PT_PlaySound, 0xffc4d9ac)
// Best match: 86%
NSTUB(PostLogicalEventForNotPowerType, 0xffc61bb4)
// Best match: 92%
NSTUB(PostLogicalEventToUI, 0xffc61c00)
NSTUB(Read, 0xffc0a138)
NSTUB(ReadFastDir, 0xffdf35b8)
// ERROR: RefreshPhysicalScreen is not found!
NSTUB(Remove, 0xffc13390)
// Best match: 93%
NSTUB(RenameFile_Fut, 0xffc12ba0)
// Best match: 76%
NSTUB(Restart, 0xffc1909c)
// ALT: NSTUB(Restart, 0xffc190a4) // 20/6
// ALT: NSTUB(Restart, 0xffe07ae4) // 20/6
// Best match: 93%
NSTUB(SetAutoShutdownTime, 0xffc63e14)
// Best match: 81%
NSTUB(SetCurrentCaptureModeType, 0xffc6a8c4)
NSTUB(SetFileTimeStamp, 0xffc13624)
// Best match: 64%
NSTUB(SetLogicalEventActive, 0xffc63af0)
// Best match: 96%
NSTUB(SetParameterData, 0xffd388e8)
// Best match: 72%
NSTUB(SetPropertyCase, 0xffc5f198)
// Best match: 92%
NSTUB(SleepTask, 0xffc176ac)
// Best match: 60%
NSTUB(TakeSemaphore, 0xffc0b74c)
// ERROR: TurnOffBackLight is not found!
// Best match: 54%
NSTUB(TurnOnBackLight, 0xffc6f9e4)
// Best match: 72%
NSTUB(UIFS_WriteFirmInfoToFile, 0xffd2d3a0)
// Best match: 93%
NSTUB(UnlockMainPower, 0xffc63cf4)
// Best match: 92%
NSTUB(UpdateMBROnFlash, 0xffc44c0c)
// Best match: 85%
NSTUB(VbattGet, 0xffc10314)
NSTUB(Write, 0xffc133f4)
NSTUB(_log, 0xffe90410)
NSTUB(_log10, 0xffe8f354)
NSTUB(_pow, 0xffe8f4c4)
NSTUB(_sqrt, 0xffe91778)
NSTUB(close, 0xffc09f50)
NSTUB(closedir, 0xffdf3688)
NSTUB(closefastdir, 0xffdf3688)
NSTUB(free, 0xffc03a80)
// Best match: 86%
NSTUB(kbd_p1_f, 0xffc114f4)
// Best match: 86%
NSTUB(kbd_p1_f_cont, 0xffc11500)
// Best match: 89%
NSTUB(kbd_p2_f, 0xffc10d04)
// ERROR: kbd_pwr_off is not found!
// ERROR: kbd_pwr_on is not found!
// Best match: 77%
NSTUB(kbd_read_keys, 0xffc113f0)
// Best match: 78%
NSTUB(kbd_read_keys_r2, 0xffc35d98)
// ALT: NSTUB(kbd_read_keys_r2, 0xffc35d7c) // 17/5
NSTUB(lseek, 0xffc13488)
NSTUB(malloc, 0xffc039ac)
NSTUB(memcmp, 0xffc0d8b4)
NSTUB(memcpy, 0xffc74b70)
NSTUB(memset, 0xffd8ff54)
NSTUB(mkdir, 0xffc136ec)
NSTUB(mktime_ext, 0xffc753dc)
NSTUB(open, 0xffc09ea0)
NSTUB(opendir, 0xffdf3524)
NSTUB(openfastdir, 0xffdf3524)
// Best match: 95%
NSTUB(qsort, 0xffd9045c)
// Best match: 95%
NSTUB(rand, 0xffc0d9bc)
NSTUB(read, 0xffc0a138)
NSTUB(readfastdir, 0xffdf35b8)
NSTUB(rename, 0xffc1341c)
// Best match: 95%
NSTUB(srand, 0xffc0d9b0)
NSTUB(stat, 0xffc13554)
NSTUB(strcat, 0xffc74984)
// ERROR: strchr is not found!
NSTUB(strcmp, 0xffc0d84c)
NSTUB(strcpy, 0xffc0d834)
NSTUB(strftime, 0xffc74de4)
NSTUB(strlen, 0xffc0d890)
// Best match: 85%
NSTUB(strncmp, 0xffc749c0)
NSTUB(strncpy, 0xffc1d254)
// Best match: 80%
NSTUB(strrchr, 0xffc74a08)
NSTUB(strtol, 0xffc1d48c)
NSTUB(strtolx, 0xffc1d290)
NSTUB(time, 0xffc59470)
NSTUB(vsprintf, 0xffc0d7f8)
NSTUB(write, 0xffc0a198)
