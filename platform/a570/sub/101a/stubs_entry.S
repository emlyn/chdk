// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 95%
NSTUB(AllocateMemory, 0xffc01e30)
// ALT: NSTUB(AllocateMemory, 0xffc01e30) // 23/1
NSTUB(AllocateUncacheableMemory, 0xffc0e5a0)
// ERROR: Close is not found!
// Best match: 93%
NSTUB(CreatePhysicalVram, 0xffddcd1c)
NSTUB(CreateTask, 0xffebe8e8)
NSTUB(CreateTaskStrict, 0xffebf988)
NSTUB(DisableDispatch, 0xffebe70c)
// ERROR: DisplayImagePhysicalScreen is not found!
NSTUB(EnableDispatch, 0xffebe798)
NSTUB(ExecuteEventProcedure, 0xffc04a54)
NSTUB(ExitTask, 0xffebeca8)
NSTUB(Fclose_Fut, 0xffe42314)
NSTUB(Fopen_Fut, 0xffe422d4)
NSTUB(Fread_Fut, 0xffe423d0)
// Best match: 95%
NSTUB(FreeMemory, 0xffc01e3c)
// ALT: NSTUB(FreeMemory, 0xffc01e3c) // 23/1
// Best match: 90%
NSTUB(FreeUncacheableMemory, 0xffc0e5d4)
NSTUB(Fseek_Fut, 0xffe424c4)
NSTUB(Fwrite_Fut, 0xffe42424)
NSTUB(GetCurrentAvValue, 0xffe05ce8)
// ALT: NSTUB(GetCurrentAvValue, 0xffe05de0) // 13/0
// ALT: NSTUB(GetCurrentAvValue, 0xffe08440) // 13/0
NSTUB(GetCurrentTargetDistance, 0xffe083e8)
// Best match: 90%
NSTUB(GetFocusLensSubjectDistance, 0xffe71c00)
// ALT: NSTUB(GetFocusLensSubjectDistance, 0xffe71c00) // 28/3
NSTUB(GetFocusLensSubjectDistanceFromLens, 0xffe720f4)
// Best match: 86%
NSTUB(GetParameterData, 0xffee3da4)
// Best match: 89%
NSTUB(GetPropertyCase, 0xffc0bc94)
// Best match: 96%
NSTUB(GetSystemTime, 0xffc036e8)
// ALT: NSTUB(GetSystemTime, 0xffc036e8) // 26/1
// Best match: 68%
NSTUB(GetZoomLensCurrentPoint, 0xffe86e2c)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffe86e2c) // 20/9
// Best match: 51%
NSTUB(GetZoomLensCurrentPosition, 0xffe86e40)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffe86e40) // 15/14
NSTUB(IsStrobeChargeCompleted, 0xffd5e208)
NSTUB(LockMainPower, 0xffee0c18)
// Best match: 61%
NSTUB(MakeDirectory, 0xffe46efc)
// ERROR: Mount_FileSystem is not found!
// Best match: 73%
NSTUB(MoveFocusLensToDistance, 0xffe08680)
NSTUB(MoveZoomLensWithPoint, 0xffe86d04)
// ALT: NSTUB(MoveZoomLensWithPoint, 0xffe86d04) // 25/0
// Best match: 66%
NSTUB(Open, 0xffe46ba4)
// Best match: 93%
NSTUB(PhySw_testgpio, 0xffde7cbc)
NSTUB(ProtectFile, 0xffe417f8)
// Best match: 92%
NSTUB(PutInNdFilter, 0xffe06164)
// ALT: NSTUB(PutInNdFilter, 0xffe06164) // 25/2
// Best match: 94%
NSTUB(PutOutNdFilter, 0xffe061ac)
// ALT: NSTUB(PutOutNdFilter, 0xffe061ac) // 16/1
// ERROR: Read is not found!
// Best match: 58%
NSTUB(RefreshPhysicalScreen, 0xffcc646c)
// ERROR: Remove is not found!
NSTUB(SetAutoShutdownTime, 0xffee0b1c)
// Best match: 86%
NSTUB(SetParameterData, 0xffee3cc4)
// Best match: 73%
NSTUB(SetPropertyCase, 0xffc0bb58)
NSTUB(SleepTask, 0xffebe7fc)
// Best match: 61%
NSTUB(TakeSemaphore, 0xffebe2b4)
NSTUB(UnlockMainPower, 0xffee0cb0)
NSTUB(Unmount_FileSystem, 0xffe45f98)
// Best match: 89%
NSTUB(UnsetZoomForMovie, 0xffc22c2c)
NSTUB(UpdateMBROnFlash, 0xffe460ec)
// Best match: 96%
NSTUB(VbattGet, 0xffde3a00)
// ERROR: Write is not found!
NSTUB(_log, 0xffef8898)
// ALT: NSTUB(_log, 0xffef8898) // 27/0
NSTUB(_log10, 0xffef7d18)
// ALT: NSTUB(_log10, 0xffef7d18) // 27/0
NSTUB(_pow, 0xffcca3b0)
// ALT: NSTUB(_pow, 0xffcca3b0) // 25/0
NSTUB(_sqrt, 0xffccc270)
// ALT: NSTUB(_sqrt, 0xffccc270) // 24/0
NSTUB(chdir, 0xffcd71f8)
// ALT: NSTUB(chdir, 0xffcd71f8) // 27/0
NSTUB(close, 0xffcd6b38)
NSTUB(closedir, 0xffef9f58)
// ERROR: free is not found!
NSTUB(ints_disable, 0xffebc998)
NSTUB(ints_enable, 0xffebc9a4)
NSTUB(ioctl, 0xffcd6c78)
NSTUB(iosDevAdd, 0xffcd7d58)
NSTUB(iosDrvInstall, 0xffcd801c)
NSTUB(isalpha, 0xffcce110)
// ALT: NSTUB(isalpha, 0xffcce110) // 4/0
NSTUB(isdigit, 0xffcce140)
// ALT: NSTUB(isdigit, 0xffcce140) // 4/0
NSTUB(islower, 0xffcce170)
// ALT: NSTUB(islower, 0xffcce170) // 4/0
NSTUB(isspace, 0xffcce1b8)
// ALT: NSTUB(isspace, 0xffcce1b8) // 4/0
NSTUB(isupper, 0xffcce1d0)
// ALT: NSTUB(isupper, 0xffcce1d0) // 4/0
NSTUB(kbd_p1_f, 0xffde5edc)
NSTUB(kbd_p1_f_cont, 0xffde5ee8)
// Best match: 56%
NSTUB(kbd_p2_f, 0xffde630c)
// Best match: 83%
NSTUB(kbd_pwr_off, 0xffde51f4)
// ALT: NSTUB(kbd_pwr_off, 0xffde5210) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffde7c48) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffde7c78) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffde7c94) // 5/1
// Best match: 88%
NSTUB(kbd_pwr_on, 0xffde7c20)
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NSTUB(localtime, 0xffcd2990)
NSTUB(lseek, 0xffcd6c7c)
// Best match: 53%
NSTUB(malloc, 0xffcd9b78)
// ALT: NSTUB(malloc, 0xffcd9b78) // 15/13
NSTUB(memcmp, 0xffcd1d70)
// ALT: NSTUB(memcmp, 0xffcddd38) // 9/0
NSTUB(memcpy, 0xffcd1dac)
NSTUB(memset, 0xffcd1e24)
// Best match: 51%
NSTUB(mkdir, 0xffe46e34)
// ALT: NSTUB(mkdir, 0xffe46f08) // 16/15
NSTUB(open, 0xffcd717c)
NSTUB(opendir, 0xffef9f8c)
NSTUB(qsort, 0xffcd15d0)
NSTUB(rand, 0xffcd15f4)
// ALT: NSTUB(rand, 0xffcd15f4) // 8/0
NSTUB(read, 0xffcd6b98)
NSTUB(readdir, 0xffef9f24)
NSTUB(rename, 0xffcd7184)
// ALT: NSTUB(rename, 0xffcd7184) // 26/0
NSTUB(rewinddir, 0xffef9f4c)
NSTUB(srand, 0xffcd1618)
// ALT: NSTUB(srand, 0xffcd1618) // 4/0
NSTUB(stat, 0xffefa020)
NSTUB(strcat, 0xffcd1e44)
NSTUB(strchr, 0xffcd1e70)
NSTUB(strcmp, 0xffcd1e94)
NSTUB(strcpy, 0xffcd2028)
NSTUB(strlen, 0xffcd218c)
NSTUB(strncmp, 0xffcd21f0)
NSTUB(strncpy, 0xffcd2234)
// ALT: NSTUB(strncpy, 0xffcd2234) // 24/0
NSTUB(strpbrk, 0xffcd227c)
NSTUB(strrchr, 0xffcd22b8)
// ALT: NSTUB(strrchr, 0xffcd22b8) // 8/0
NSTUB(strtol, 0xffcd1a0c)
NSTUB(taskCreateHookAdd, 0xffcdc7d8)
NSTUB(taskDeleteHookAdd, 0xffcdc714)
// Best match: 82%
NSTUB(taskIdListGet, 0xffce3cc0)
NSTUB(taskLock, 0xffce437c)
NSTUB(taskName, 0xffce3bb8)
NSTUB(taskResume, 0xffce3f9c)
NSTUB(taskSuspend, 0xffce3dc8)
NSTUB(taskUnlock, 0xffce4424)
NSTUB(time, 0xffcd36dc)
// ALT: NSTUB(time, 0xffcd36dc) // 25/0
// Best match: 57%
NSTUB(utime, 0xffefa0b4)
// ALT: NSTUB(utime, 0xffefa0b4) // 15/11
NSTUB(vsprintf, 0xffcd58e0)
NSTUB(write, 0xffcd6c08)
