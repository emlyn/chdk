// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 95%
NSTUB(AllocateMemory, 0xff821e34)
// ALT: NSTUB(AllocateMemory, 0xff821e34) // 23/1
NSTUB(AllocateUncacheableMemory, 0xff82e5f4)
// ERROR: Close is not found!
// Best match: 93%
NSTUB(CreatePhysicalVram, 0xffa3dd78)
NSTUB(CreateTask, 0xffb335ac)
NSTUB(CreateTaskStrict, 0xffb3464c)
NSTUB(DisableDispatch, 0xffb333d0)
// ERROR: DisplayImagePhysicalScreen is not found!
NSTUB(EnableDispatch, 0xffb3345c)
NSTUB(ExecuteEventProcedure, 0xff824a58)
NSTUB(ExitTask, 0xffb3396c)
NSTUB(Fclose_Fut, 0xffaae6ec)
NSTUB(Fopen_Fut, 0xffaae6ac)
NSTUB(Fread_Fut, 0xffaae7a8)
// Best match: 95%
NSTUB(FreeMemory, 0xff821e40)
// ALT: NSTUB(FreeMemory, 0xff821e40) // 23/1
// Best match: 90%
NSTUB(FreeUncacheableMemory, 0xff82e628)
NSTUB(Fseek_Fut, 0xffaae89c)
NSTUB(Fwrite_Fut, 0xffaae7fc)
NSTUB(GetCurrentAvValue, 0xffa68520)
// ALT: NSTUB(GetCurrentAvValue, 0xffa6a900) // 13/0
NSTUB(GetCurrentTargetDistance, 0xffa6a8a8)
// Best match: 83%
NSTUB(GetFocusLensSubjectDistance, 0xffaec4e4)
// ALT: NSTUB(GetFocusLensSubjectDistance, 0xffaec4e4) // 26/5
// Best match: 92%
NSTUB(GetFocusLensSubjectDistanceFromLens, 0xffaec9e8)
// Best match: 76%
NSTUB(GetParameterData, 0xffb590f0)
// ALT: NSTUB(GetParameterData, 0xffb590f0) // 23/7
// Best match: 89%
NSTUB(GetPropertyCase, 0xff82bc98)
// Best match: 96%
NSTUB(GetSystemTime, 0xff8236ec)
// ALT: NSTUB(GetSystemTime, 0xff8236ec) // 26/1
// Best match: 68%
NSTUB(GetZoomLensCurrentPoint, 0xffafe5c0)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffafe5c0) // 20/9
// Best match: 51%
NSTUB(GetZoomLensCurrentPosition, 0xffafe5d4)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffafe5d4) // 15/14
NSTUB(IsStrobeChargeCompleted, 0xff9c0cb8)
NSTUB(LockMainPower, 0xffb55ff4)
// Best match: 61%
NSTUB(MakeDirectory, 0xffab32ec)
// ERROR: Mount_FileSystem is not found!
// Best match: 73%
NSTUB(MoveFocusLensToDistance, 0xffa6ab40)
NSTUB(MoveZoomLensWithPoint, 0xffafe498)
// ALT: NSTUB(MoveZoomLensWithPoint, 0xffafe498) // 25/0
// Best match: 66%
NSTUB(Open, 0xffab2f94)
// Best match: 93%
NSTUB(PhySw_testgpio, 0xffa48ca0)
NSTUB(ProtectFile, 0xffaadbd0)
// Best match: 92%
NSTUB(PutInNdFilter, 0xffa68704)
// ALT: NSTUB(PutInNdFilter, 0xffa68704) // 25/2
// Best match: 94%
NSTUB(PutOutNdFilter, 0xffa6874c)
// ALT: NSTUB(PutOutNdFilter, 0xffa6874c) // 16/1
// ERROR: Read is not found!
// Best match: 58%
NSTUB(RefreshPhysicalScreen, 0xff927458)
// ERROR: Remove is not found!
NSTUB(SetAutoShutdownTime, 0xffb55ef8)
// Best match: 66%
NSTUB(SetParameterData, 0xffb590ec)
// Best match: 73%
NSTUB(SetPropertyCase, 0xff82bb5c)
NSTUB(SleepTask, 0xffb334c0)
// Best match: 61%
NSTUB(TakeSemaphore, 0xffb32f78)
NSTUB(UnlockMainPower, 0xffb5608c)
NSTUB(Unmount_FileSystem, 0xffab238c)
// Best match: 89%
NSTUB(UnsetZoomForMovie, 0xff84656c)
NSTUB(UpdateMBROnFlash, 0xffab24e0)
// Best match: 96%
NSTUB(VbattGet, 0xffa44c08)
// ERROR: Write is not found!
NSTUB(_log, 0xff92e5f4)
// ALT: NSTUB(_log, 0xff92e5f4) // 27/0
NSTUB(_log10, 0xff92b39c)
// ALT: NSTUB(_log10, 0xff92b39c) // 27/0
NSTUB(_pow, 0xff92b51c)
// ALT: NSTUB(_pow, 0xff92b51c) // 25/0
NSTUB(_sqrt, 0xff92d3dc)
// ALT: NSTUB(_sqrt, 0xff92d3dc) // 24/0
NSTUB(chdir, 0xff939080)
// ALT: NSTUB(chdir, 0xff939080) // 27/0
NSTUB(close, 0xff9389c0)
NSTUB(closedir, 0xffb73614)
// ERROR: free is not found!
NSTUB(ints_disable, 0xffb31678)
NSTUB(ints_enable, 0xffb31684)
NSTUB(ioctl, 0xff938b00)
NSTUB(iosDevAdd, 0xff939be0)
NSTUB(iosDrvInstall, 0xff939ea4)
NSTUB(isalpha, 0xff92ff98)
// ALT: NSTUB(isalpha, 0xff92ff98) // 4/0
NSTUB(isdigit, 0xff92ffc8)
// ALT: NSTUB(isdigit, 0xff92ffc8) // 4/0
NSTUB(islower, 0xff92fff8)
// ALT: NSTUB(islower, 0xff92fff8) // 4/0
NSTUB(isspace, 0xff930040)
// ALT: NSTUB(isspace, 0xff930040) // 4/0
NSTUB(isupper, 0xff930058)
// ALT: NSTUB(isupper, 0xff930058) // 4/0
NSTUB(kbd_p1_f, 0xffa4711c)
NSTUB(kbd_p1_f_cont, 0xffa47128)
// Best match: 56%
NSTUB(kbd_p2_f, 0xffa4754c)
// Best match: 83%
NSTUB(kbd_pwr_off, 0xffa46434)
// ALT: NSTUB(kbd_pwr_off, 0xffa46450) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffa48c5c) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffa48c78) // 5/1
// Best match: 55%
NSTUB(kbd_pwr_on, 0xffa3f5b4)
// ALT: NSTUB(kbd_pwr_on, 0xffa3f5e0) // 5/4
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NSTUB(localtime, 0xff934818)
NSTUB(lseek, 0xff938b04)
// Best match: 53%
NSTUB(malloc, 0xff93ba00)
// ALT: NSTUB(malloc, 0xff93ba00) // 15/13
NSTUB(memcmp, 0xff933bf8)
// ALT: NSTUB(memcmp, 0xff93fbc0) // 9/0
NSTUB(memcpy, 0xff933c34)
NSTUB(memset, 0xff933cac)
// Best match: 51%
NSTUB(mkdir, 0xffab3224)
// ALT: NSTUB(mkdir, 0xffab32f8) // 16/15
NSTUB(open, 0xff939004)
NSTUB(opendir, 0xffb73648)
NSTUB(qsort, 0xff933458)
NSTUB(rand, 0xff93347c)
// ALT: NSTUB(rand, 0xff93347c) // 8/0
NSTUB(read, 0xff938a20)
NSTUB(readdir, 0xffb735e0)
NSTUB(rename, 0xff93900c)
// ALT: NSTUB(rename, 0xff93900c) // 26/0
NSTUB(rewinddir, 0xffb73608)
NSTUB(srand, 0xff9334a0)
// ALT: NSTUB(srand, 0xff9334a0) // 4/0
NSTUB(stat, 0xffb736dc)
NSTUB(strcat, 0xff933ccc)
NSTUB(strchr, 0xff933cf8)
NSTUB(strcmp, 0xff933d1c)
NSTUB(strcpy, 0xff933eb0)
NSTUB(strlen, 0xff934014)
NSTUB(strncmp, 0xff934078)
NSTUB(strncpy, 0xff9340bc)
// ALT: NSTUB(strncpy, 0xff9340bc) // 24/0
NSTUB(strpbrk, 0xff934104)
NSTUB(strrchr, 0xff934140)
// ALT: NSTUB(strrchr, 0xff934140) // 8/0
NSTUB(strtol, 0xff933894)
NSTUB(taskCreateHookAdd, 0xff93e660)
NSTUB(taskDeleteHookAdd, 0xff93e59c)
// Best match: 82%
NSTUB(taskIdListGet, 0xff945b48)
NSTUB(taskLock, 0xff946204)
NSTUB(taskName, 0xff945a40)
NSTUB(taskResume, 0xff945e24)
NSTUB(taskSuspend, 0xff945c50)
NSTUB(taskUnlock, 0xff9462ac)
NSTUB(time, 0xff935564)
// ALT: NSTUB(time, 0xff935564) // 25/0
// Best match: 57%
NSTUB(utime, 0xffb73770)
// ALT: NSTUB(utime, 0xffb73770) // 15/11
NSTUB(vsprintf, 0xff937768)
NSTUB(write, 0xff938a90)
