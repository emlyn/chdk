// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 95%
NSTUB(AllocateMemory, 0xff811e34)
// ALT: NSTUB(AllocateMemory, 0xff811e34) // 23/1
NSTUB(AllocateUncacheableMemory, 0xff81e5f4)
// ERROR: Close is not found!
// Best match: 93%
NSTUB(CreatePhysicalVram, 0xffa2dd78)
NSTUB(CreateTask, 0xffb235ac)
NSTUB(CreateTaskStrict, 0xffb2464c)
NSTUB(DeleteFile_Fut, 0xffa9e578)
NSTUB(DisableDispatch, 0xffb233d0)
// ERROR: DisplayImagePhysicalScreen is not found!
NSTUB(EnableDispatch, 0xffb2345c)
NSTUB(ExecuteEventProcedure, 0xff814a58)
NSTUB(ExitTask, 0xffb2396c)
NSTUB(Fclose_Fut, 0xffa9e6ec)
NSTUB(Feof_Fut, 0xffa9e8e8)
NSTUB(Fflush_Fut, 0xffa9e924)
NSTUB(Fgets_Fut, 0xffa9e850)
NSTUB(Fopen_Fut, 0xffa9e6ac)
NSTUB(Fread_Fut, 0xffa9e7a8)
// Best match: 95%
NSTUB(FreeMemory, 0xff811e40)
// ALT: NSTUB(FreeMemory, 0xff811e40) // 23/1
// Best match: 90%
NSTUB(FreeUncacheableMemory, 0xff81e628)
NSTUB(Fseek_Fut, 0xffa9e89c)
NSTUB(Fwrite_Fut, 0xffa9e7fc)
NSTUB(GetCurrentAvValue, 0xffa58520)
// ALT: NSTUB(GetCurrentAvValue, 0xffa5a900) // 13/0
NSTUB(GetCurrentTargetDistance, 0xffa5a8a8)
// Best match: 83%
NSTUB(GetFocusLensSubjectDistance, 0xffadc4e4)
// ALT: NSTUB(GetFocusLensSubjectDistance, 0xffadc4e4) // 26/5
// Best match: 92%
NSTUB(GetFocusLensSubjectDistanceFromLens, 0xffadc9e8)
// Best match: 76%
NSTUB(GetParameterData, 0xffb490f0)
// ALT: NSTUB(GetParameterData, 0xffb490f0) // 23/7
// Best match: 89%
NSTUB(GetPropertyCase, 0xff81bc98)
// Best match: 96%
NSTUB(GetSystemTime, 0xff8136ec)
// ALT: NSTUB(GetSystemTime, 0xff8136ec) // 26/1
// Best match: 68%
NSTUB(GetZoomLensCurrentPoint, 0xffaee5c0)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffaee5c0) // 20/9
// Best match: 51%
NSTUB(GetZoomLensCurrentPosition, 0xffaee5d4)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffaee5d4) // 15/14
NSTUB(IsStrobeChargeCompleted, 0xff9b0cb8)
NSTUB(LockMainPower, 0xffb45ff4)
// Best match: 61%
NSTUB(MakeDirectory, 0xffaa32ec)
NSTUB(MakeDirectory_Fut, 0xffa9e62c)
// ERROR: Mount_FileSystem is not found!
// Best match: 73%
NSTUB(MoveFocusLensToDistance, 0xffa5ab40)
NSTUB(MoveZoomLensWithPoint, 0xffaee498)
// ALT: NSTUB(MoveZoomLensWithPoint, 0xffaee498) // 25/0
// Best match: 66%
NSTUB(Open, 0xffaa2f94)
// Best match: 93%
NSTUB(PhySw_testgpio, 0xffa38ca0)
NSTUB(PostLogicalEventForNotPowerType, 0xffb41780)
NSTUB(PostLogicalEventToUI, 0xffb417fc)
// ALT: NSTUB(PostLogicalEventToUI, 0xffb41884) // 21/0
NSTUB(ProtectFile, 0xffa9dbd0)
// Best match: 92%
NSTUB(PutInNdFilter, 0xffa58704)
// ALT: NSTUB(PutInNdFilter, 0xffa58704) // 25/2
// Best match: 94%
NSTUB(PutOutNdFilter, 0xffa5874c)
// ALT: NSTUB(PutOutNdFilter, 0xffa5874c) // 16/1
// ERROR: Read is not found!
// Best match: 58%
NSTUB(RefreshPhysicalScreen, 0xff917458)
NSTUB(Remove, 0xffaa2fdc)
NSTUB(RenameFile_Fut, 0xffa9e4d0)
NSTUB(SetAutoShutdownTime, 0xffb45ef8)
NSTUB(SetCurrentCaptureModeType, 0xff82ab20)
NSTUB(SetLogicalEventActive, 0xffb4399c)
// Best match: 66%
NSTUB(SetParameterData, 0xffb490ec)
// Best match: 73%
NSTUB(SetPropertyCase, 0xff81bb5c)
NSTUB(SleepTask, 0xffb234c0)
// Best match: 61%
NSTUB(TakeSemaphore, 0xffb22f78)
NSTUB(TurnOffBackLight, 0xff84af38)
NSTUB(TurnOnBackLight, 0xff84af08)
NSTUB(UnlockMainPower, 0xffb4608c)
NSTUB(Unmount_FileSystem, 0xffaa238c)
// Best match: 89%
NSTUB(UnsetZoomForMovie, 0xff83656c)
NSTUB(UpdateMBROnFlash, 0xffaa24e0)
// Best match: 96%
NSTUB(VbattGet, 0xffa34c08)
// ERROR: Write is not found!
NSTUB(_log, 0xff91e5f4)
// ALT: NSTUB(_log, 0xff91e5f4) // 27/0
NSTUB(_log10, 0xff91b39c)
// ALT: NSTUB(_log10, 0xff91b39c) // 27/0
NSTUB(_pow, 0xff91b51c)
// ALT: NSTUB(_pow, 0xff91b51c) // 25/0
NSTUB(_sqrt, 0xff91d3dc)
// ALT: NSTUB(_sqrt, 0xff91d3dc) // 24/0
NSTUB(chdir, 0xff929080)
// ALT: NSTUB(chdir, 0xff929080) // 27/0
NSTUB(close, 0xff9289c0)
NSTUB(closedir, 0xffb63614)
NSTUB(errnoOfTaskGet, 0xff926614)
// ERROR: free is not found!
NSTUB(ints_disable, 0xffb21678)
NSTUB(ints_enable, 0xffb21684)
NSTUB(ioctl, 0xff928b00)
NSTUB(iosDevAdd, 0xff929be0)
NSTUB(iosDevDelete, 0xff929bb8)
NSTUB(iosDevFind, 0xff929b6c)
NSTUB(iosDrvInstall, 0xff929ea4)
NSTUB(isalpha, 0xff91ff98)
NSTUB(isdigit, 0xff91ffc8)
NSTUB(islower, 0xff91fff8)
NSTUB(ispunct, 0xff920028)
NSTUB(isspace, 0xff920040)
NSTUB(isupper, 0xff920058)
NSTUB(isxdigit, 0xff920070)
NSTUB(kbd_p1_f, 0xffa3711c)
NSTUB(kbd_p1_f_cont, 0xffa37128)
// Best match: 56%
NSTUB(kbd_p2_f, 0xffa3754c)
// Best match: 83%
NSTUB(kbd_pwr_off, 0xffa36434)
// ALT: NSTUB(kbd_pwr_off, 0xffa36450) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffa38c5c) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffa38c78) // 5/1
// Best match: 55%
NSTUB(kbd_pwr_on, 0xffa2f5b4)
// ALT: NSTUB(kbd_pwr_on, 0xffa2f5e0) // 5/4
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NSTUB(localtime, 0xff924818)
NSTUB(lseek, 0xff928b04)
// Best match: 53%
NSTUB(malloc, 0xff92ba00)
// ALT: NSTUB(malloc, 0xff92ba00) // 15/13
NSTUB(memchr, 0xff923bc4)
NSTUB(memcmp, 0xff923bf8)
// ALT: NSTUB(memcmp, 0xff92fbc0) // 9/0
NSTUB(memcpy, 0xff923c34)
NSTUB(memset, 0xff923cac)
// Best match: 51%
NSTUB(mkdir, 0xffaa3224)
// ALT: NSTUB(mkdir, 0xffaa32f8) // 16/15
NSTUB(mktime, 0xff9249e0)
NSTUB(open, 0xff929004)
NSTUB(opendir, 0xffb63648)
NSTUB(qsort, 0xff923458)
NSTUB(rand, 0xff92347c)
// ALT: NSTUB(rand, 0xff92347c) // 8/0
NSTUB(read, 0xff928a20)
NSTUB(readdir, 0xffb635e0)
NSTUB(rename, 0xff92900c)
// ALT: NSTUB(rename, 0xff92900c) // 26/0
NSTUB(rewinddir, 0xffb63608)
NSTUB(srand, 0xff9234a0)
// ALT: NSTUB(srand, 0xff9234a0) // 4/0
NSTUB(stat, 0xffb636dc)
NSTUB(strcat, 0xff923ccc)
NSTUB(strchr, 0xff923cf8)
NSTUB(strcmp, 0xff923d1c)
NSTUB(strcpy, 0xff923eb0)
NSTUB(strftime, 0xff925538)
NSTUB(strlen, 0xff924014)
NSTUB(strncmp, 0xff924078)
NSTUB(strncpy, 0xff9240bc)
// ALT: NSTUB(strncpy, 0xff9240bc) // 24/0
NSTUB(strpbrk, 0xff924104)
NSTUB(strrchr, 0xff924140)
// ALT: NSTUB(strrchr, 0xff924140) // 8/0
NSTUB(strtol, 0xff923894)
NSTUB(strtoul, 0xff923a3c)
NSTUB(taskCreateHookAdd, 0xff92e660)
NSTUB(taskDeleteHookAdd, 0xff92e59c)
// Best match: 82%
NSTUB(taskIdListGet, 0xff935b48)
NSTUB(taskLock, 0xff936204)
NSTUB(taskName, 0xff935a40)
NSTUB(taskResume, 0xff935e24)
NSTUB(taskSuspend, 0xff935c50)
NSTUB(taskUnlock, 0xff9362ac)
NSTUB(time, 0xff925564)
// ALT: NSTUB(time, 0xff925564) // 25/0
NSTUB(tolower, 0xff920088)
NSTUB(toupper, 0xff920098)
// Best match: 57%
NSTUB(utime, 0xffb63770)
// ALT: NSTUB(utime, 0xffb63770) // 15/11
NSTUB(vsprintf, 0xff927768)
NSTUB(write, 0xff928a90)
