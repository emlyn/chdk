// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 95%
NSTUB(AllocateMemory, 0xffc01e54)
// ALT: NSTUB(AllocateMemory, 0xffc01e54) // 23/1
NSTUB(AllocateUncacheableMemory, 0xffc0e5c4)
// ERROR: Close is not found!
// Best match: 93%
NSTUB(CreatePhysicalVram, 0xffdd289c)
NSTUB(CreateTask, 0xffea9728)
NSTUB(CreateTaskStrict, 0xffeaa7c8)
NSTUB(DeleteFile_Fut, 0xffe36be8)
NSTUB(DisableDispatch, 0xffea954c)
// ERROR: DisplayImagePhysicalScreen is not found!
NSTUB(EnableDispatch, 0xffea95d8)
NSTUB(ExecuteEventProcedure, 0xffc04a78)
NSTUB(ExitTask, 0xffea9ae8)
NSTUB(Fclose_Fut, 0xffe36d5c)
NSTUB(Feof_Fut, 0xffe36f58)
NSTUB(Fflush_Fut, 0xffe36f94)
NSTUB(Fgets_Fut, 0xffe36ec0)
NSTUB(Fopen_Fut, 0xffe36d1c)
NSTUB(Fread_Fut, 0xffe36e18)
// Best match: 95%
NSTUB(FreeMemory, 0xffc01e60)
// ALT: NSTUB(FreeMemory, 0xffc01e60) // 23/1
// Best match: 90%
NSTUB(FreeUncacheableMemory, 0xffc0e5f8)
NSTUB(Fseek_Fut, 0xffe36f0c)
NSTUB(Fwrite_Fut, 0xffe36e6c)
NSTUB(GetCurrentAvValue, 0xffdfb6d0)
// ALT: NSTUB(GetCurrentAvValue, 0xffdfdb80) // 13/0
NSTUB(GetCurrentTargetDistance, 0xffdfdb28)
// Best match: 90%
NSTUB(GetFocusLensSubjectDistance, 0xffe66598)
// ALT: NSTUB(GetFocusLensSubjectDistance, 0xffe66598) // 28/3
NSTUB(GetFocusLensSubjectDistanceFromLens, 0xffe66a8c)
// Best match: 86%
NSTUB(GetParameterData, 0xffecefe8)
// Best match: 89%
NSTUB(GetPropertyCase, 0xffc0bcb8)
// Best match: 96%
NSTUB(GetSystemTime, 0xffc0370c)
// ALT: NSTUB(GetSystemTime, 0xffc0370c) // 26/1
// Best match: 68%
NSTUB(GetZoomLensCurrentPoint, 0xffe79288)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffe79288) // 20/9
// Best match: 51%
NSTUB(GetZoomLensCurrentPosition, 0xffe7929c)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffe7929c) // 15/14
NSTUB(IsStrobeChargeCompleted, 0xffd5488c)
NSTUB(LockMainPower, 0xffecbea4)
// Best match: 61%
NSTUB(MakeDirectory, 0xffe3b944)
NSTUB(MakeDirectory_Fut, 0xffe36c9c)
// ERROR: Mount_FileSystem is not found!
// Best match: 73%
NSTUB(MoveFocusLensToDistance, 0xffdfddc0)
NSTUB(MoveZoomLensWithPoint, 0xffe79160)
// ALT: NSTUB(MoveZoomLensWithPoint, 0xffe79160) // 25/0
// Best match: 66%
NSTUB(Open, 0xffe3b5ec)
// Best match: 93%
NSTUB(PhySw_testgpio, 0xffddd77c)
NSTUB(PostLogicalEventForNotPowerType, 0xffec7ad4)
NSTUB(PostLogicalEventToUI, 0xffec7b50)
// ALT: NSTUB(PostLogicalEventToUI, 0xffec7bd8) // 21/0
NSTUB(ProtectFile, 0xffe36240)
// Best match: 92%
NSTUB(PutInNdFilter, 0xffdfb8b4)
// ALT: NSTUB(PutInNdFilter, 0xffdfb8b4) // 25/2
// Best match: 94%
NSTUB(PutOutNdFilter, 0xffdfb8fc)
// ALT: NSTUB(PutOutNdFilter, 0xffdfb8fc) // 16/1
// ERROR: Read is not found!
// Best match: 58%
NSTUB(RefreshPhysicalScreen, 0xffcbdfec)
NSTUB(Remove, 0xffe3b634)
NSTUB(RenameFile_Fut, 0xffe36b40)
// Best match: 96%
NSTUB(Restart, 0xffc0b76c)
NSTUB(SetAutoShutdownTime, 0xffecbda8)
NSTUB(SetCurrentCaptureModeType, 0xffc183b4)
NSTUB(SetLogicalEventActive, 0xffec99b0)
// Best match: 86%
NSTUB(SetParameterData, 0xffecef08)
// Best match: 73%
NSTUB(SetPropertyCase, 0xffc0bb7c)
NSTUB(SleepTask, 0xffea963c)
// Best match: 61%
NSTUB(TakeSemaphore, 0xffea90f4)
NSTUB(TurnOffBackLight, 0xffc304cc)
NSTUB(TurnOnBackLight, 0xffc3049c)
NSTUB(UnlockMainPower, 0xffecbf3c)
NSTUB(Unmount_FileSystem, 0xffe3a9e0)
// Best match: 89%
NSTUB(UnsetZoomForMovie, 0xffc232b4)
NSTUB(UpdateMBROnFlash, 0xffe3ab34)
// Best match: 96%
NSTUB(VbattGet, 0xffdd9568)
// ERROR: Write is not found!
NSTUB(_log, 0xffee37d4)
// ALT: NSTUB(_log, 0xffee37d4) // 27/0
NSTUB(_log10, 0xffee2c54)
// ALT: NSTUB(_log10, 0xffee2c54) // 27/0
NSTUB(_pow, 0xffcc1f30)
// ALT: NSTUB(_pow, 0xffcc1f30) // 25/0
NSTUB(_sqrt, 0xffcc3df0)
// ALT: NSTUB(_sqrt, 0xffcc3df0) // 24/0
// Best match: 96%
NSTUB(add_ptp_handler, 0xffd915d0)
NSTUB(chdir, 0xffcced78)
// ALT: NSTUB(chdir, 0xffcced78) // 27/0
NSTUB(close, 0xffcce6b8)
NSTUB(closedir, 0xffee4e94)
NSTUB(errnoOfTaskGet, 0xffccc30c)
// ERROR: free is not found!
NSTUB(ints_disable, 0xffea77d8)
NSTUB(ints_enable, 0xffea77e4)
NSTUB(ioctl, 0xffcce7f8)
NSTUB(iosDevAdd, 0xffccf8d8)
NSTUB(iosDevDelete, 0xffccf8b0)
NSTUB(iosDevFind, 0xffccf864)
NSTUB(iosDrvInstall, 0xffccfb9c)
NSTUB(isalpha, 0xffcc5c90)
NSTUB(isdigit, 0xffcc5cc0)
NSTUB(islower, 0xffcc5cf0)
NSTUB(ispunct, 0xffcc5d20)
NSTUB(isspace, 0xffcc5d38)
NSTUB(isupper, 0xffcc5d50)
NSTUB(isxdigit, 0xffcc5d68)
NSTUB(kbd_p1_f, 0xffddba38)
NSTUB(kbd_p1_f_cont, 0xffddba44)
// Best match: 56%
NSTUB(kbd_p2_f, 0xffddbe68)
// Best match: 83%
NSTUB(kbd_pwr_off, 0xffddad5c)
// ALT: NSTUB(kbd_pwr_off, 0xffddad78) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffddd708) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffddd738) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffddd754) // 5/1
// Best match: 88%
NSTUB(kbd_pwr_on, 0xffddd6e0)
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NSTUB(localtime, 0xffcca510)
NSTUB(lseek, 0xffcce7fc)
// Best match: 53%
NSTUB(malloc, 0xffcd16f8)
// ALT: NSTUB(malloc, 0xffcd16f8) // 15/13
NSTUB(memchr, 0xffcc98bc)
NSTUB(memcmp, 0xffcc98f0)
// ALT: NSTUB(memcmp, 0xffcd58b8) // 9/0
NSTUB(memcpy, 0xffcc992c)
NSTUB(memset, 0xffcc99a4)
// Best match: 51%
NSTUB(mkdir, 0xffe3b87c)
// ALT: NSTUB(mkdir, 0xffe3b950) // 16/15
NSTUB(mktime, 0xffcca6d8)
NSTUB(open, 0xffccecfc)
NSTUB(opendir, 0xffee4ec8)
NSTUB(qsort, 0xffcc9150)
NSTUB(rand, 0xffcc9174)
// ALT: NSTUB(rand, 0xffcc9174) // 8/0
NSTUB(read, 0xffcce718)
NSTUB(readdir, 0xffee4e60)
NSTUB(rename, 0xffcced04)
// ALT: NSTUB(rename, 0xffcced04) // 26/0
NSTUB(rewinddir, 0xffee4e88)
NSTUB(srand, 0xffcc9198)
// ALT: NSTUB(srand, 0xffcc9198) // 4/0
NSTUB(stat, 0xffee4f5c)
NSTUB(strcat, 0xffcc99c4)
NSTUB(strchr, 0xffcc99f0)
NSTUB(strcmp, 0xffcc9a14)
NSTUB(strcpy, 0xffcc9ba8)
NSTUB(strftime, 0xffccb230)
NSTUB(strlen, 0xffcc9d0c)
NSTUB(strncmp, 0xffcc9d70)
NSTUB(strncpy, 0xffcc9db4)
// ALT: NSTUB(strncpy, 0xffcc9db4) // 24/0
NSTUB(strpbrk, 0xffcc9dfc)
NSTUB(strrchr, 0xffcc9e38)
// ALT: NSTUB(strrchr, 0xffcc9e38) // 8/0
NSTUB(strtol, 0xffcc958c)
NSTUB(strtoul, 0xffcc9734)
NSTUB(taskCreateHookAdd, 0xffcd4358)
NSTUB(taskDeleteHookAdd, 0xffcd4294)
// Best match: 82%
NSTUB(taskIdListGet, 0xffcdb840)
NSTUB(taskLock, 0xffcdbefc)
NSTUB(taskName, 0xffcdb738)
NSTUB(taskResume, 0xffcdbb1c)
NSTUB(taskSuspend, 0xffcdb948)
NSTUB(taskUnlock, 0xffcdbfa4)
NSTUB(time, 0xffccb25c)
// ALT: NSTUB(time, 0xffccb25c) // 25/0
NSTUB(tolower, 0xffcc5d80)
NSTUB(toupper, 0xffcc5d90)
// Best match: 57%
NSTUB(utime, 0xffee4ff0)
// ALT: NSTUB(utime, 0xffee4ff0) // 15/11
NSTUB(vsprintf, 0xffccd460)
NSTUB(write, 0xffcce788)
