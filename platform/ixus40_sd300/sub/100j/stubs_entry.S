// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// ERROR: AllocateMemory is not found!
// Best match: 65%
NSTUB(AllocateUncacheableMemory, 0xff815288)
// ERROR: Close is not found!
// ERROR: CreatePhysicalVram is not found!
NSTUB(CreateTask, 0xff823784)
// ALT: NSTUB(CreateTask, 0xfff142f0) // 31/0
// Best match: 53%
NSTUB(CreateTaskStrict, 0xff8eaf8c)
// ALT: NSTUB(CreateTaskStrict, 0xff8eafcc) // 7/6
// ALT: NSTUB(CreateTaskStrict, 0xff8eb00c) // 7/6
// ALT: NSTUB(CreateTaskStrict, 0xff8eb04c) // 7/6
NSTUB(DeleteFile_Fut, 0xff8699b4)
// ALT: NSTUB(DeleteFile_Fut, 0xfff17058) // 10/0
NSTUB(DisableDispatch, 0xff8234f4)
// ALT: NSTUB(DisableDispatch, 0xfff14060) // 19/0
// ERROR: DisplayImagePhysicalScreen is not found!
NSTUB(EnableDispatch, 0xff823580)
// ALT: NSTUB(EnableDispatch, 0xfff140ec) // 22/0
// ERROR: ExecuteEventProcedure is not found!
NSTUB(ExitTask, 0xff823b44)
// ALT: NSTUB(ExitTask, 0xfff146b0) // 31/0
NSTUB(Fclose_Fut, 0xff869af4)
// Best match: 72%
NSTUB(Feof_Fut, 0xfff17328)
NSTUB(Fflush_Fut, 0xff869d40)
NSTUB(Fgets_Fut, 0xff869c78)
// ALT: NSTUB(Fgets_Fut, 0xfff1729c) // 15/0
NSTUB(Fopen_Fut, 0xff869ab8)
NSTUB(Fread_Fut, 0xff869bd8)
// ALT: NSTUB(Fread_Fut, 0xfff171fc) // 25/0
// ERROR: FreeMemory is not found!
// ERROR: FreeUncacheableMemory is not found!
NSTUB(Fseek_Fut, 0xff869cc0)
// ALT: NSTUB(Fseek_Fut, 0xfff172e4) // 24/0
NSTUB(Fwrite_Fut, 0xff869c28)
// ALT: NSTUB(Fwrite_Fut, 0xfff1724c) // 26/0
NSTUB(GetCurrentAvValue, 0xffa6aeb0)
NSTUB(GetCurrentTargetDistance, 0xffa6ae58)
// ERROR: GetFocusLensSubjectDistance is not found!
// ERROR: GetFocusLensSubjectDistanceFromLens is not found!
// ERROR: GetParameterData is not found!
// ERROR: GetPropertyCase is not found!
// Best match: 96%
NSTUB(GetSystemTime, 0xff815638)
// ALT: NSTUB(GetSystemTime, 0xff815638) // 26/1
// ALT: NSTUB(GetSystemTime, 0xfff05c38) // 26/1
// ALT: NSTUB(GetSystemTime, 0xfff05c38) // 26/1
// Best match: 68%
NSTUB(GetZoomLensCurrentPoint, 0xffa57ccc)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffa57ccc) // 20/9
// Best match: 51%
NSTUB(GetZoomLensCurrentPosition, 0xffa57ce0)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffa57ce0) // 15/14
// ERROR: IsStrobeChargeCompleted is not found!
// Best match: 61%
NSTUB(LockMainPower, 0xff9561a0)
// Best match: 70%
NSTUB(MakeDirectory, 0xff8718c4)
// ALT: NSTUB(MakeDirectory, 0xfff1bd30) // 22/9
NSTUB(MakeDirectory_Fut, 0xff869a40)
// ALT: NSTUB(MakeDirectory_Fut, 0xfff170e4) // 25/0
// ERROR: Mount_FileSystem is not found!
// Best match: 96%
NSTUB(MoveFocusLensToDistance, 0xffa6b0e8)
// Best match: 52%
NSTUB(MoveZoomLensWithPoint, 0xffa52078)
// ALT: NSTUB(MoveZoomLensWithPoint, 0xffa52078) // 13/12
// ERROR: Open is not found!
// ERROR: PhySw_testgpio is not found!
NSTUB(ProtectFile, 0xff8691bc)
// ALT: NSTUB(ProtectFile, 0xfff16900) // 23/0
// Best match: 92%
NSTUB(PutInNdFilter, 0xffa693dc)
// ALT: NSTUB(PutInNdFilter, 0xffa693dc) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffa6aa8c) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffa6aa8c) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffa6aad4) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffa6aad4) // 25/2
// Best match: 94%
NSTUB(PutOutNdFilter, 0xffa69424)
// ALT: NSTUB(PutOutNdFilter, 0xffa69424) // 16/1
// ERROR: Read is not found!
// Best match: 74%
NSTUB(RefreshPhysicalScreen, 0xff96c550)
// Best match: 52%
NSTUB(Remove, 0xff8c0700)
NSTUB(RenameFile_Fut, 0xff869934)
// ALT: NSTUB(RenameFile_Fut, 0xfff16fd8) // 27/0
// ERROR: SetAutoShutdownTime is not found!
// ERROR: SetParameterData is not found!
// ERROR: SetPropertyCase is not found!
NSTUB(SleepTask, 0xff8235e4)
// ALT: NSTUB(SleepTask, 0xff823698) // 31/0
// ALT: NSTUB(SleepTask, 0xfff14150) // 31/0
// ALT: NSTUB(SleepTask, 0xfff14204) // 31/0
NSTUB(TakeSemaphore, 0xff822f5c)
// ALT: NSTUB(TakeSemaphore, 0xfff13ac8) // 31/0
NSTUB(TurnOffBackLight, 0xff99e594)
NSTUB(TurnOnBackLight, 0xff99e568)
// Best match: 65%
NSTUB(UnlockMainPower, 0xff95625c)
NSTUB(Unmount_FileSystem, 0xff870344)
// ALT: NSTUB(Unmount_FileSystem, 0xfff1aab4) // 18/0
// ERROR: UnsetZoomForMovie is not found!
// Best match: 96%
NSTUB(UpdateMBROnFlash, 0xff8704d0)
// ERROR: VbattGet is not found!
// ERROR: Write is not found!
NSTUB(_log, 0xffaaebe0)
// ALT: NSTUB(_log, 0xffaaebe0) // 27/0
// ALT: NSTUB(_log, 0xfff404cc) // 27/0
// ALT: NSTUB(_log, 0xfff404cc) // 27/0
NSTUB(_log10, 0xffaaf288)
// ALT: NSTUB(_log10, 0xffaaf288) // 27/0
// ALT: NSTUB(_log10, 0xfff40b74) // 27/0
// ALT: NSTUB(_log10, 0xfff40b74) // 27/0
NSTUB(_pow, 0xffaaf778)
// ALT: NSTUB(_pow, 0xffaaf778) // 25/0
// ALT: NSTUB(_pow, 0xfff41064) // 25/0
// ALT: NSTUB(_pow, 0xfff41064) // 25/0
NSTUB(_sqrt, 0xffab3ac4)
// ALT: NSTUB(_sqrt, 0xffab3ac4) // 24/0
// ALT: NSTUB(_sqrt, 0xfff45834) // 24/0
// ALT: NSTUB(_sqrt, 0xfff45834) // 24/0
NSTUB(chdir, 0xffac2f4c)
// ALT: NSTUB(chdir, 0xffac2f4c) // 27/0
// ALT: NSTUB(chdir, 0xfff56ffc) // 27/0
// ALT: NSTUB(chdir, 0xfff56ffc) // 27/0
NSTUB(close, 0xffac288c)
// ALT: NSTUB(close, 0xfff5693c) // 29/0
NSTUB(closedir, 0xffabe6c0)
// ALT: NSTUB(closedir, 0xfff52770) // 26/0
NSTUB(errnoOfTaskGet, 0xffabee8c)
// ALT: NSTUB(errnoOfTaskGet, 0xfff52f3c) // 15/0
// ERROR: free is not found!
NSTUB(ints_disable, 0xff81f438)
// ALT: NSTUB(ints_disable, 0xfff0f3a4) // 15/0
NSTUB(ints_enable, 0xff81f444)
// ALT: NSTUB(ints_enable, 0xfff0f3b0) // 12/0
NSTUB(ioctl, 0xffac29cc)
// ALT: NSTUB(ioctl, 0xfff56a7c) // 28/0
NSTUB(iosDevAdd, 0xffac3aac)
// ALT: NSTUB(iosDevAdd, 0xfff57b5c) // 28/0
NSTUB(iosDevDelete, 0xffac3a84)
// ALT: NSTUB(iosDevDelete, 0xfff57b34) // 28/0
NSTUB(iosDevFind, 0xffac3a38)
// ALT: NSTUB(iosDevFind, 0xfff57ae8) // 27/0
NSTUB(iosDrvInstall, 0xffac3d70)
// ALT: NSTUB(iosDrvInstall, 0xfff57e20) // 30/0
NSTUB(isalpha, 0xffab8574)
// ALT: NSTUB(isalpha, 0xfff4c624) // 4/0
NSTUB(isdigit, 0xffab85a4)
// ALT: NSTUB(isdigit, 0xfff4c654) // 4/0
NSTUB(islower, 0xffab85d4)
// ALT: NSTUB(islower, 0xfff4c684) // 4/0
NSTUB(ispunct, 0xffab8604)
// ALT: NSTUB(ispunct, 0xfff4c6b4) // 4/0
NSTUB(isspace, 0xffab861c)
// ALT: NSTUB(isspace, 0xfff4c6cc) // 4/0
NSTUB(isupper, 0xffab8634)
// ALT: NSTUB(isupper, 0xfff4c6e4) // 4/0
NSTUB(isxdigit, 0xffab864c)
// ALT: NSTUB(isxdigit, 0xfff4c6fc) // 4/0
// ERROR: kbd_p1_f is not found!
// ERROR: kbd_p1_f_cont is not found!
// ERROR: kbd_p2_f is not found!
// Best match: 83%
NSTUB(kbd_pwr_off, 0xffa41bf0)
// ALT: NSTUB(kbd_pwr_off, 0xffa41c0c) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xfff30af0) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xfff30b0c) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xfff30ff8) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xfff31014) // 5/1
// Best match: 55%
NSTUB(kbd_pwr_on, 0xffa575d0)
// ALT: NSTUB(kbd_pwr_on, 0xffa575fc) // 5/4
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NSTUB(localtime, 0xffabceb4)
// ALT: NSTUB(localtime, 0xfff50f64) // 27/2
NSTUB(lseek, 0xffac29d0)
// ALT: NSTUB(lseek, 0xfff56a80) // 28/0
// Best match: 53%
NSTUB(malloc, 0xffac58cc)
// ALT: NSTUB(malloc, 0xffac58cc) // 15/13
// ALT: NSTUB(malloc, 0xfff5997c) // 15/13
// ALT: NSTUB(malloc, 0xfff5997c) // 15/13
NSTUB(memchr, 0xffabc260)
// ALT: NSTUB(memchr, 0xfff50310) // 19/0
NSTUB(memcmp, 0xffabc294)
// ALT: NSTUB(memcmp, 0xffaca83c) // 9/0
// ALT: NSTUB(memcmp, 0xfff50344) // 9/0
// ALT: NSTUB(memcmp, 0xfff674cc) // 9/0
NSTUB(memcpy, 0xffabc2d0)
// ALT: NSTUB(memcpy, 0xfff50380) // 23/0
NSTUB(memset, 0xffabc348)
// ALT: NSTUB(memset, 0xfff503f8) // 14/0
// Best match: 61%
NSTUB(mkdir, 0xff871810)
// ALT: NSTUB(mkdir, 0xff8718d0) // 19/12
// ALT: NSTUB(mkdir, 0xfff1bc7c) // 19/12
// ALT: NSTUB(mkdir, 0xfff1bd3c) // 19/12
NSTUB(mktime, 0xffabd07c)
// ALT: NSTUB(mktime, 0xfff5112c) // 28/0
NSTUB(open, 0xffac2ed0)
// ALT: NSTUB(open, 0xfff56f80) // 26/0
NSTUB(opendir, 0xffabe6f4)
// ALT: NSTUB(opendir, 0xfff527a4) // 29/0
NSTUB(qsort, 0xffabbaf4)
// ALT: NSTUB(qsort, 0xfff4fba4) // 13/0
NSTUB(rand, 0xffabbb18)
// ALT: NSTUB(rand, 0xffabbb18) // 8/0
// ALT: NSTUB(rand, 0xfff4fbc8) // 8/0
// ALT: NSTUB(rand, 0xfff4fbc8) // 8/0
NSTUB(read, 0xffac28ec)
// ALT: NSTUB(read, 0xfff5699c) // 29/0
NSTUB(readdir, 0xffabe68c)
// ALT: NSTUB(readdir, 0xfff5273c) // 11/0
NSTUB(rename, 0xffac2ed8)
// ALT: NSTUB(rename, 0xffac2ed8) // 26/0
// ALT: NSTUB(rename, 0xfff56f88) // 26/0
// ALT: NSTUB(rename, 0xfff56f88) // 26/0
NSTUB(rewinddir, 0xffabe6b4)
// ALT: NSTUB(rewinddir, 0xfff52764) // 3/0
NSTUB(srand, 0xffabbb3c)
// ALT: NSTUB(srand, 0xffabbb3c) // 4/0
// ALT: NSTUB(srand, 0xfff4fbec) // 4/0
// ALT: NSTUB(srand, 0xfff4fbec) // 4/0
NSTUB(stat, 0xffabe788)
// ALT: NSTUB(stat, 0xfff52838) // 24/0
NSTUB(strcat, 0xffabc368)
// ALT: NSTUB(strcat, 0xfff50418) // 8/0
NSTUB(strchr, 0xffabc394)
// ALT: NSTUB(strchr, 0xfff50444) // 7/0
NSTUB(strcmp, 0xffabc3b8)
// ALT: NSTUB(strcmp, 0xfff50468) // 6/0
NSTUB(strcpy, 0xffabc54c)
// ALT: NSTUB(strcpy, 0xfff505fc) // 5/0
NSTUB(strftime, 0xffabdbd4)
// ALT: NSTUB(strftime, 0xfff51c84) // 6/0
NSTUB(strlen, 0xffabc6b0)
// ALT: NSTUB(strlen, 0xfff50760) // 5/0
NSTUB(strncmp, 0xffabc714)
// ALT: NSTUB(strncmp, 0xfff507c4) // 11/0
NSTUB(strncpy, 0xffabc758)
// ALT: NSTUB(strncpy, 0xffabc758) // 24/0
// ALT: NSTUB(strncpy, 0xfff50808) // 24/0
// ALT: NSTUB(strncpy, 0xfff50808) // 24/0
NSTUB(strpbrk, 0xffabc7a0)
// ALT: NSTUB(strpbrk, 0xfff50850) // 19/0
NSTUB(strrchr, 0xffabc7dc)
// ALT: NSTUB(strrchr, 0xffabc7dc) // 8/0
// ALT: NSTUB(strrchr, 0xfff5088c) // 8/0
// ALT: NSTUB(strrchr, 0xfff5088c) // 8/0
NSTUB(strtol, 0xffabbf30)
// ALT: NSTUB(strtol, 0xfff4ffe0) // 26/0
NSTUB(taskCreateHookAdd, 0xffac8a18)
// ALT: NSTUB(taskCreateHookAdd, 0xfff5df1c) // 29/0
NSTUB(taskDeleteHookAdd, 0xffac8954)
// ALT: NSTUB(taskDeleteHookAdd, 0xfff5de58) // 28/0
// Best match: 82%
NSTUB(taskIdListGet, 0xffad0b78)
// ALT: NSTUB(taskIdListGet, 0xfff73b14) // 24/5
NSTUB(taskLock, 0xffad1234)
// ALT: NSTUB(taskLock, 0xfff741d0) // 31/0
NSTUB(taskName, 0xffad0a70)
// ALT: NSTUB(taskName, 0xfff73a0c) // 25/0
NSTUB(taskResume, 0xffad0e54)
// ALT: NSTUB(taskResume, 0xfff73df0) // 31/0
NSTUB(taskSuspend, 0xffad0c80)
// ALT: NSTUB(taskSuspend, 0xfff73c1c) // 31/0
NSTUB(taskUnlock, 0xffad12dc)
// ALT: NSTUB(taskUnlock, 0xfff74278) // 31/0
NSTUB(time, 0xffabdc00)
// ALT: NSTUB(time, 0xffabdc00) // 25/0
// ALT: NSTUB(time, 0xfff51cb0) // 25/0
// ALT: NSTUB(time, 0xfff51cb0) // 25/0
NSTUB(tolower, 0xffab8664)
// ALT: NSTUB(tolower, 0xfff4c714) // 4/0
NSTUB(toupper, 0xffab8674)
// ALT: NSTUB(toupper, 0xfff4c724) // 4/0
NSTUB(utime, 0xffabe81c)
// ALT: NSTUB(utime, 0xffabe81c) // 26/0
// ALT: NSTUB(utime, 0xfff528cc) // 26/0
// ALT: NSTUB(utime, 0xfff528cc) // 26/0
NSTUB(vsprintf, 0xffabffe0)
// ALT: NSTUB(vsprintf, 0xfff54090) // 13/0
NSTUB(write, 0xffac295c)
// ALT: NSTUB(write, 0xfff56a0c) // 29/0
