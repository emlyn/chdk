// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 79%
NSTUB(AllocateMemory, 0xff811ba0)
NSTUB(AllocateUncacheableMemory, 0xff8146a0)
// ERROR: Close is not found!
NSTUB(CreatePhysicalVram, 0xff93d230)
NSTUB(CreateTask, 0xff8221f4)
NSTUB(CreateTaskStrict, 0xff8237bc)
NSTUB(DeleteFile_Fut, 0xff86d8d0)
NSTUB(DisableDispatch, 0xff821f64)
// ERROR: DisplayImagePhysicalScreen is not found!
NSTUB(EnableDispatch, 0xff821ff0)
NSTUB(ExecuteEventProcedure, 0xff816944)
NSTUB(ExitTask, 0xff8225b4)
NSTUB(Fclose_Fut, 0xff86da10)
NSTUB(Feof_Fut, 0xff86dc24)
NSTUB(Fflush_Fut, 0xff86dc5c)
NSTUB(Fgets_Fut, 0xff86db94)
NSTUB(Fopen_Fut, 0xff86d9d4)
NSTUB(Fread_Fut, 0xff86daf4)
// Best match: 66%
NSTUB(FreeMemory, 0xff811bac)
NSTUB(FreeUncacheableMemory, 0xff8146d4)
NSTUB(Fseek_Fut, 0xff86dbdc)
NSTUB(Fwrite_Fut, 0xff86db44)
NSTUB(GetCurrentAvValue, 0xffa72a08)
NSTUB(GetCurrentTargetDistance, 0xffa729b0)
// Best match: 51%
NSTUB(GetFocusLensSubjectDistance, 0xffa58340)
// ALT: NSTUB(GetFocusLensSubjectDistance, 0xffa58340) // 16/15
// Best match: 88%
NSTUB(GetFocusLensSubjectDistanceFromLens, 0xffa674ac)
// Best match: 76%
NSTUB(GetParameterData, 0xff975fe0)
// ALT: NSTUB(GetParameterData, 0xff975fe0) // 23/7
// Best match: 71%
NSTUB(GetPropertyCase, 0xff825aa4)
// Best match: 96%
NSTUB(GetSystemTime, 0xff814a28)
// ALT: NSTUB(GetSystemTime, 0xff814a28) // 26/1
// Best match: 72%
NSTUB(GetZoomLensCurrentPoint, 0xffa5ece0)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffa5ece0) // 21/8
// Best match: 55%
NSTUB(GetZoomLensCurrentPosition, 0xffa5ecf4)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffa5ecf4) // 16/13
NSTUB(IsStrobeChargeCompleted, 0xff911ca8)
// Best match: 96%
NSTUB(LockMainPower, 0xff9721b8)
// Best match: 70%
NSTUB(MakeDirectory, 0xff874dd8)
NSTUB(MakeDirectory_Fut, 0xff86d95c)
// ERROR: Mount_FileSystem is not found!
// Best match: 96%
NSTUB(MoveFocusLensToDistance, 0xffa72c40)
NSTUB(MoveZoomLensWithPoint, 0xffa591fc)
// ALT: NSTUB(MoveZoomLensWithPoint, 0xffa591fc) // 25/0
// ERROR: Open is not found!
// ERROR: PhySw_testgpio is not found!
NSTUB(PostLogicalEventForNotPowerType, 0xff96efa4)
NSTUB(PostLogicalEventToUI, 0xff96f030)
// ALT: NSTUB(PostLogicalEventToUI, 0xff96f0c8) // 25/0
NSTUB(ProtectFile, 0xff86d03c)
// Best match: 92%
NSTUB(PutInNdFilter, 0xffa70a7c)
// ALT: NSTUB(PutInNdFilter, 0xffa70a7c) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffa725b0) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffa725b0) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffa725f8) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffa725f8) // 25/2
// Best match: 94%
NSTUB(PutOutNdFilter, 0xffa70ac4)
// ALT: NSTUB(PutOutNdFilter, 0xffa70ac4) // 16/1
// ERROR: Read is not found!
NSTUB(RefreshPhysicalScreen, 0xff985fdc)
// Best match: 52%
NSTUB(Remove, 0xff8cf2f8)
NSTUB(RenameFile_Fut, 0xff86d850)
// Best match: 96%
NSTUB(SetAutoShutdownTime, 0xff9720b0)
// Best match: 73%
NSTUB(SetCurrentCaptureModeType, 0xff99ab34)
// Best match: 87%
NSTUB(SetLogicalEventActive, 0xff970658)
// Best match: 66%
NSTUB(SetParameterData, 0xff975fdc)
// ERROR: SetPropertyCase is not found!
NSTUB(SleepTask, 0xff822054)
// ALT: NSTUB(SleepTask, 0xff822108) // 31/0
NSTUB(TakeSemaphore, 0xff8219c4)
NSTUB(TurnOffBackLight, 0xff9aeb2c)
NSTUB(TurnOnBackLight, 0xff9aeb00)
// Best match: 96%
NSTUB(UnlockMainPower, 0xff97226c)
NSTUB(Unmount_FileSystem, 0xff873fa0)
// ERROR: UnsetZoomForMovie is not found!
// Best match: 96%
NSTUB(UpdateMBROnFlash, 0xff8740f8)
// ERROR: VbattGet is not found!
// ERROR: Write is not found!
NSTUB(_log, 0xffaa8120)
// ALT: NSTUB(_log, 0xffaa8120) // 27/0
NSTUB(_log10, 0xffaa87c8)
// ALT: NSTUB(_log10, 0xffaa87c8) // 27/0
NSTUB(_pow, 0xffaa8cb8)
// ALT: NSTUB(_pow, 0xffaa8cb8) // 25/0
NSTUB(_sqrt, 0xffaad004)
// ALT: NSTUB(_sqrt, 0xffaad004) // 24/0
NSTUB(chdir, 0xffabc260)
// ALT: NSTUB(chdir, 0xffabc260) // 27/0
NSTUB(close, 0xffabbba0)
NSTUB(closedir, 0xffab7b40)
NSTUB(errnoOfTaskGet, 0xffab830c)
// ERROR: free is not found!
NSTUB(ints_disable, 0xff81e0ac)
NSTUB(ints_enable, 0xff81e0b8)
NSTUB(ioctl, 0xffabbce0)
NSTUB(iosDevAdd, 0xffabcdc0)
NSTUB(iosDevDelete, 0xffabcd98)
NSTUB(iosDevFind, 0xffabcd4c)
NSTUB(iosDrvInstall, 0xffabd084)
NSTUB(isalpha, 0xffab1ab4)
NSTUB(isdigit, 0xffab1ae4)
NSTUB(islower, 0xffab1b14)
NSTUB(ispunct, 0xffab1b44)
NSTUB(isspace, 0xffab1b5c)
NSTUB(isupper, 0xffab1b74)
NSTUB(isxdigit, 0xffab1b8c)
// ERROR: kbd_p1_f is not found!
// ERROR: kbd_p1_f_cont is not found!
// ERROR: kbd_p2_f is not found!
// Best match: 83%
NSTUB(kbd_pwr_off, 0xff82a370)
// ALT: NSTUB(kbd_pwr_off, 0xff82a38c) // 5/1
// Best match: 55%
NSTUB(kbd_pwr_on, 0xff93bd0c)
// ALT: NSTUB(kbd_pwr_on, 0xff93bd38) // 5/4
// ALT: NSTUB(kbd_pwr_on, 0xffa5e76c) // 5/4
// ALT: NSTUB(kbd_pwr_on, 0xffa5e798) // 5/4
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NSTUB(localtime, 0xffab6334)
NSTUB(lseek, 0xffabbce4)
// Best match: 53%
NSTUB(malloc, 0xffabebe0)
// ALT: NSTUB(malloc, 0xffabebe0) // 15/13
NSTUB(memchr, 0xffab56e0)
NSTUB(memcmp, 0xffab5714)
// ALT: NSTUB(memcmp, 0xffac3afc) // 9/0
NSTUB(memcpy, 0xffab5750)
NSTUB(memset, 0xffab57c8)
// Best match: 61%
NSTUB(mkdir, 0xff874d24)
// ALT: NSTUB(mkdir, 0xff874de4) // 19/12
NSTUB(mktime, 0xffab64fc)
NSTUB(open, 0xffabc1e4)
NSTUB(opendir, 0xffab7b74)
NSTUB(qsort, 0xffab4f74)
NSTUB(rand, 0xffab4f98)
// ALT: NSTUB(rand, 0xffab4f98) // 8/0
NSTUB(read, 0xffabbc00)
NSTUB(readdir, 0xffab7b0c)
NSTUB(rename, 0xffabc1ec)
// ALT: NSTUB(rename, 0xffabc1ec) // 26/0
NSTUB(rewinddir, 0xffab7b34)
NSTUB(srand, 0xffab4fbc)
// ALT: NSTUB(srand, 0xffab4fbc) // 4/0
NSTUB(stat, 0xffab7c08)
NSTUB(strcat, 0xffab57e8)
NSTUB(strchr, 0xffab5814)
NSTUB(strcmp, 0xffab5838)
NSTUB(strcpy, 0xffab59cc)
NSTUB(strftime, 0xffab7054)
NSTUB(strlen, 0xffab5b30)
NSTUB(strncmp, 0xffab5b94)
NSTUB(strncpy, 0xffab5bd8)
// ALT: NSTUB(strncpy, 0xffab5bd8) // 24/0
NSTUB(strpbrk, 0xffab5c20)
NSTUB(strrchr, 0xffab5c5c)
// ALT: NSTUB(strrchr, 0xffab5c5c) // 8/0
NSTUB(strtol, 0xffab53b0)
NSTUB(taskCreateHookAdd, 0xffac2260)
NSTUB(taskDeleteHookAdd, 0xffac219c)
// Best match: 82%
NSTUB(taskIdListGet, 0xffac9d44)
NSTUB(taskLock, 0xffaca400)
NSTUB(taskName, 0xffac9c3c)
NSTUB(taskResume, 0xffaca020)
NSTUB(taskSuspend, 0xffac9e4c)
NSTUB(taskUnlock, 0xffaca4a8)
NSTUB(time, 0xffab7080)
// ALT: NSTUB(time, 0xffab7080) // 25/0
NSTUB(tolower, 0xffab1ba4)
NSTUB(toupper, 0xffab1bb4)
NSTUB(utime, 0xffab7c9c)
// ALT: NSTUB(utime, 0xffab7c9c) // 26/0
NSTUB(vsprintf, 0xffab9460)
NSTUB(write, 0xffabbc70)
