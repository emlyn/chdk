// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 95%
NSTUB(AllocateMemory, 0xff811e34)
// ALT: NSTUB(AllocateMemory, 0xff811e34) // 23/1
NSTUB(AllocateUncacheableMemory, 0xff81e5a4)
// ERROR: Close is not found!
// Best match: 93%
NSTUB(CreatePhysicalVram, 0xffa25e0c)
NSTUB(CreateTask, 0xffb14790)
NSTUB(CreateTaskStrict, 0xffb15830)
NSTUB(DeleteFile_Fut, 0xffa955dc)
NSTUB(DisableDispatch, 0xffb145b4)
// ERROR: DisplayImagePhysicalScreen is not found!
NSTUB(EnableDispatch, 0xffb14640)
NSTUB(ExecuteEventProcedure, 0xff814a58)
NSTUB(ExitTask, 0xffb14b50)
NSTUB(Fclose_Fut, 0xffa95750)
NSTUB(Feof_Fut, 0xffa9594c)
NSTUB(Fflush_Fut, 0xffa95988)
NSTUB(Fgets_Fut, 0xffa958b4)
NSTUB(Fopen_Fut, 0xffa95710)
NSTUB(Fread_Fut, 0xffa9580c)
// Best match: 95%
NSTUB(FreeMemory, 0xff811e40)
// ALT: NSTUB(FreeMemory, 0xff811e40) // 23/1
// Best match: 90%
NSTUB(FreeUncacheableMemory, 0xff81e5d8)
NSTUB(Fseek_Fut, 0xffa95900)
NSTUB(Fwrite_Fut, 0xffa95860)
NSTUB(GetCurrentAvValue, 0xffa50268)
// ALT: NSTUB(GetCurrentAvValue, 0xffa52838) // 13/0
NSTUB(GetCurrentTargetDistance, 0xffa527e0)
// Best match: 90%
NSTUB(GetFocusLensSubjectDistance, 0xffad2fb4)
// ALT: NSTUB(GetFocusLensSubjectDistance, 0xffad2fb4) // 28/3
NSTUB(GetFocusLensSubjectDistanceFromLens, 0xffad34a8)
// Best match: 86%
NSTUB(GetParameterData, 0xffb39c60)
// Best match: 89%
NSTUB(GetPropertyCase, 0xff81bc98)
// Best match: 96%
NSTUB(GetSystemTime, 0xff8136ec)
// ALT: NSTUB(GetSystemTime, 0xff8136ec) // 26/1
// Best match: 68%
NSTUB(GetZoomLensCurrentPoint, 0xffae5ee4)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffae5ee4) // 20/9
// Best match: 51%
NSTUB(GetZoomLensCurrentPosition, 0xffae5ef8)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffae5ef8) // 15/14
NSTUB(IsStrobeChargeCompleted, 0xff9a43a8)
NSTUB(LockMainPower, 0xffb36b74)
// Best match: 61%
NSTUB(MakeDirectory, 0xffa9a338)
NSTUB(MakeDirectory_Fut, 0xffa95690)
// ERROR: Mount_FileSystem is not found!
// Best match: 73%
NSTUB(MoveFocusLensToDistance, 0xffa52a78)
NSTUB(MoveZoomLensWithPoint, 0xffae5dbc)
// ALT: NSTUB(MoveZoomLensWithPoint, 0xffae5dbc) // 25/0
// Best match: 66%
NSTUB(Open, 0xffa99fe0)
// Best match: 93%
NSTUB(PhySw_testgpio, 0xffa30ce4)
NSTUB(ProtectFile, 0xffa94c34)
// Best match: 92%
NSTUB(PutInNdFilter, 0xffa5044c)
// ALT: NSTUB(PutInNdFilter, 0xffa5044c) // 25/2
// Best match: 94%
NSTUB(PutOutNdFilter, 0xffa50494)
// ALT: NSTUB(PutOutNdFilter, 0xffa50494) // 16/1
// ERROR: Read is not found!
// Best match: 58%
NSTUB(RefreshPhysicalScreen, 0xff90bc18)
NSTUB(Remove, 0xffa9a028)
NSTUB(RenameFile_Fut, 0xffa95534)
NSTUB(SetAutoShutdownTime, 0xffb36a78)
// Best match: 86%
NSTUB(SetParameterData, 0xffb39b80)
// Best match: 73%
NSTUB(SetPropertyCase, 0xff81bb5c)
NSTUB(SleepTask, 0xffb146a4)
// Best match: 61%
NSTUB(TakeSemaphore, 0xffb1415c)
NSTUB(UnlockMainPower, 0xffb36c0c)
NSTUB(Unmount_FileSystem, 0xffa993d4)
// Best match: 89%
NSTUB(UnsetZoomForMovie, 0xff834a74)
NSTUB(UpdateMBROnFlash, 0xffa99528)
// Best match: 96%
NSTUB(VbattGet, 0xffa2ccd8)
// ERROR: Write is not found!
NSTUB(_log, 0xff912db4)
// ALT: NSTUB(_log, 0xff912db4) // 27/0
NSTUB(_log10, 0xff90fb5c)
// ALT: NSTUB(_log10, 0xff90fb5c) // 27/0
NSTUB(_pow, 0xff90fcdc)
// ALT: NSTUB(_pow, 0xff90fcdc) // 25/0
NSTUB(_sqrt, 0xff911b9c)
// ALT: NSTUB(_sqrt, 0xff911b9c) // 24/0
NSTUB(chdir, 0xff91d840)
// ALT: NSTUB(chdir, 0xff91d840) // 27/0
NSTUB(close, 0xff91d180)
NSTUB(closedir, 0xffb52640)
NSTUB(errnoOfTaskGet, 0xff91add4)
// ERROR: free is not found!
NSTUB(ints_disable, 0xffb12840)
NSTUB(ints_enable, 0xffb1284c)
NSTUB(ioctl, 0xff91d2c0)
NSTUB(iosDevAdd, 0xff91e3a0)
NSTUB(iosDevFind, 0xff91e32c)
NSTUB(iosDrvInstall, 0xff91e664)
NSTUB(isalpha, 0xff914758)
// ALT: NSTUB(isalpha, 0xff914758) // 4/0
NSTUB(isdigit, 0xff914788)
// ALT: NSTUB(isdigit, 0xff914788) // 4/0
NSTUB(islower, 0xff9147b8)
// ALT: NSTUB(islower, 0xff9147b8) // 4/0
NSTUB(isspace, 0xff914800)
// ALT: NSTUB(isspace, 0xff914800) // 4/0
NSTUB(isupper, 0xff914818)
// ALT: NSTUB(isupper, 0xff914818) // 4/0
NSTUB(kbd_p1_f, 0xffa2f1ec)
NSTUB(kbd_p1_f_cont, 0xffa2f1f8)
// Best match: 56%
NSTUB(kbd_p2_f, 0xffa2f61c)
// Best match: 83%
NSTUB(kbd_pwr_off, 0xffa2e504)
// ALT: NSTUB(kbd_pwr_off, 0xffa2e520) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffa30ca0) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffa30cbc) // 5/1
// Best match: 55%
NSTUB(kbd_pwr_on, 0xffa27648)
// ALT: NSTUB(kbd_pwr_on, 0xffa27674) // 5/4
// ALT: NSTUB(kbd_pwr_on, 0xffa27b74) // 5/4
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NSTUB(localtime, 0xff918fd8)
NSTUB(lseek, 0xff91d2c4)
// Best match: 53%
NSTUB(malloc, 0xff9201c0)
// ALT: NSTUB(malloc, 0xff9201c0) // 15/13
NSTUB(memcmp, 0xff9183b8)
// ALT: NSTUB(memcmp, 0xff924380) // 9/0
NSTUB(memcpy, 0xff9183f4)
NSTUB(memset, 0xff91846c)
// Best match: 51%
NSTUB(mkdir, 0xffa9a270)
// ALT: NSTUB(mkdir, 0xffa9a344) // 16/15
NSTUB(mktime, 0xff9191a0)
NSTUB(open, 0xff91d7c4)
NSTUB(opendir, 0xffb52674)
NSTUB(qsort, 0xff917c18)
NSTUB(rand, 0xff917c3c)
// ALT: NSTUB(rand, 0xff917c3c) // 8/0
NSTUB(read, 0xff91d1e0)
NSTUB(readdir, 0xffb5260c)
NSTUB(rename, 0xff91d7cc)
// ALT: NSTUB(rename, 0xff91d7cc) // 26/0
NSTUB(rewinddir, 0xffb52634)
NSTUB(srand, 0xff917c60)
// ALT: NSTUB(srand, 0xff917c60) // 4/0
NSTUB(stat, 0xffb52708)
NSTUB(strcat, 0xff91848c)
NSTUB(strchr, 0xff9184b8)
NSTUB(strcmp, 0xff9184dc)
NSTUB(strcpy, 0xff918670)
NSTUB(strftime, 0xff919cf8)
NSTUB(strlen, 0xff9187d4)
NSTUB(strncmp, 0xff918838)
NSTUB(strncpy, 0xff91887c)
// ALT: NSTUB(strncpy, 0xff91887c) // 24/0
NSTUB(strpbrk, 0xff9188c4)
NSTUB(strrchr, 0xff918900)
// ALT: NSTUB(strrchr, 0xff918900) // 8/0
NSTUB(strtol, 0xff918054)
NSTUB(taskCreateHookAdd, 0xff922e20)
NSTUB(taskDeleteHookAdd, 0xff922d5c)
// Best match: 82%
NSTUB(taskIdListGet, 0xff92a308)
NSTUB(taskLock, 0xff92a9c4)
NSTUB(taskName, 0xff92a200)
NSTUB(taskResume, 0xff92a5e4)
NSTUB(taskSuspend, 0xff92a410)
NSTUB(taskUnlock, 0xff92aa6c)
NSTUB(time, 0xff919d24)
// ALT: NSTUB(time, 0xff919d24) // 25/0
// Best match: 57%
NSTUB(utime, 0xffb5279c)
// ALT: NSTUB(utime, 0xffb5279c) // 15/11
NSTUB(vsprintf, 0xff91bf28)
NSTUB(write, 0xff91d250)
