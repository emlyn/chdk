// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 95%
NSTUB(AllocateMemory, 0xffc01e34)
// ALT: NSTUB(AllocateMemory, 0xffc01e34) // 23/1
NSTUB(AllocateUncacheableMemory, 0xffc0e0a8)
NSTUB(Close, 0xffe1d7d0)
// Best match: 93%
NSTUB(CreatePhysicalVram, 0xffdbb00c)
NSTUB(CreateTask, 0xffe83538)
NSTUB(CreateTaskStrict, 0xffe845d8)
NSTUB(DisableDispatch, 0xffe8335c)
// ERROR: DisplayImagePhysicalScreen is not found!
NSTUB(EnableDispatch, 0xffe833e8)
NSTUB(ExecuteEventProcedure, 0xffc04670)
NSTUB(ExitTask, 0xffe838f8)
NSTUB(Fclose_Fut, 0xffe18f1c)
NSTUB(Fopen_Fut, 0xffe18edc)
NSTUB(Fread_Fut, 0xffe18fd8)
// Best match: 95%
NSTUB(FreeMemory, 0xffc01e40)
// ALT: NSTUB(FreeMemory, 0xffc01e40) // 23/1
// Best match: 90%
NSTUB(FreeUncacheableMemory, 0xffc0e0dc)
NSTUB(Fseek_Fut, 0xffe190cc)
NSTUB(Fwrite_Fut, 0xffe1902c)
NSTUB(GetCurrentAvValue, 0xffddc168)
// ALT: NSTUB(GetCurrentAvValue, 0xffdde538) // 13/0
NSTUB(GetCurrentTargetDistance, 0xffdde4e0)
// Best match: 83%
NSTUB(GetFocusLensSubjectDistance, 0xffe42fd4)
// ALT: NSTUB(GetFocusLensSubjectDistance, 0xffe42fd4) // 26/5
// Best match: 92%
NSTUB(GetFocusLensSubjectDistanceFromLens, 0xffe434d8)
// Best match: 86%
NSTUB(GetParameterData, 0xffea9740)
// Best match: 89%
NSTUB(GetPropertyCase, 0xffc0b79c)
// Best match: 96%
NSTUB(GetSystemTime, 0xffc03398)
// ALT: NSTUB(GetSystemTime, 0xffc03398) // 26/1
// Best match: 68%
NSTUB(GetZoomLensCurrentPoint, 0xffe5503c)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffe5503c) // 20/9
// Best match: 51%
NSTUB(GetZoomLensCurrentPosition, 0xffe55050)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffe55050) // 15/14
NSTUB(IsStrobeChargeCompleted, 0xffd45b54)
NSTUB(LockMainPower, 0xffea65dc)
// Best match: 58%
NSTUB(MakeDirectory, 0xffe1dae4)
// ERROR: Mount_FileSystem is not found!
// Best match: 73%
NSTUB(MoveFocusLensToDistance, 0xffdde778)
NSTUB(MoveZoomLensWithPoint, 0xffe54f14)
// ALT: NSTUB(MoveZoomLensWithPoint, 0xffe54f14) // 25/0
NSTUB(Open, 0xffe1d7a8)
// Best match: 93%
NSTUB(PhySw_testgpio, 0xffdc5078)
NSTUB(ProtectFile, 0xffe18400)
// Best match: 92%
NSTUB(PutInNdFilter, 0xffddc34c)
// ALT: NSTUB(PutInNdFilter, 0xffddc34c) // 25/2
// Best match: 94%
NSTUB(PutOutNdFilter, 0xffddc394)
// ALT: NSTUB(PutOutNdFilter, 0xffddc394) // 16/1
NSTUB(Read, 0xffe1d864)
// Best match: 58%
NSTUB(RefreshPhysicalScreen, 0xffcb9180)
NSTUB(Remove, 0xffe1d7f0)
NSTUB(SetAutoShutdownTime, 0xffea64e0)
// Best match: 86%
NSTUB(SetParameterData, 0xffea9660)
// Best match: 73%
NSTUB(SetPropertyCase, 0xffc0b660)
NSTUB(SleepTask, 0xffe8344c)
// Best match: 61%
NSTUB(TakeSemaphore, 0xffe82f04)
NSTUB(UnlockMainPower, 0xffea6674)
NSTUB(Unmount_FileSystem, 0xffe1cb9c)
NSTUB(UpdateMBROnFlash, 0xffe1ccf0)
// Best match: 96%
NSTUB(VbattGet, 0xffdc17a8)
NSTUB(Write, 0xffe1d870)
NSTUB(_log, 0xffebe410)
// ALT: NSTUB(_log, 0xffebe410) // 27/0
NSTUB(_log10, 0xffebd890)
// ALT: NSTUB(_log10, 0xffebd890) // 27/0
NSTUB(_pow, 0xffcbd0c4)
// ALT: NSTUB(_pow, 0xffcbd0c4) // 25/0
NSTUB(_sqrt, 0xffcbee4c)
// ALT: NSTUB(_sqrt, 0xffcbee4c) // 24/0
NSTUB(chdir, 0xffcc9dd4)
// ALT: NSTUB(chdir, 0xffcc9dd4) // 27/0
NSTUB(close, 0xffcc9714)
NSTUB(closedir, 0xffebfad0)
// ERROR: free is not found!
NSTUB(ints_disable, 0xffe815e8)
NSTUB(ints_enable, 0xffe815f4)
NSTUB(ioctl, 0xffcc9854)
NSTUB(iosDevAdd, 0xffcca934)
NSTUB(iosDrvInstall, 0xffccabf8)
NSTUB(isalpha, 0xffcc0cec)
// ALT: NSTUB(isalpha, 0xffcc0cec) // 4/0
NSTUB(isdigit, 0xffcc0d1c)
// ALT: NSTUB(isdigit, 0xffcc0d1c) // 4/0
NSTUB(islower, 0xffcc0d4c)
// ALT: NSTUB(islower, 0xffcc0d4c) // 4/0
NSTUB(isspace, 0xffcc0d94)
// ALT: NSTUB(isspace, 0xffcc0d94) // 4/0
NSTUB(isupper, 0xffcc0dac)
// ALT: NSTUB(isupper, 0xffcc0dac) // 4/0
NSTUB(kbd_p1_f, 0xffdc3bcc)
NSTUB(kbd_p1_f_cont, 0xffdc3bd8)
// Best match: 56%
NSTUB(kbd_p2_f, 0xffdc3ff4)
// Best match: 83%
NSTUB(kbd_pwr_off, 0xffdc2fa0)
// ALT: NSTUB(kbd_pwr_off, 0xffdc2fbc) // 5/1
// Best match: 55%
NSTUB(kbd_pwr_on, 0xffdbb858)
// ALT: NSTUB(kbd_pwr_on, 0xffdbb884) // 5/4
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NSTUB(localtime, 0xffcc556c)
NSTUB(lseek, 0xffcc9858)
// Best match: 53%
NSTUB(malloc, 0xffccc754)
// ALT: NSTUB(malloc, 0xffccc754) // 15/13
NSTUB(memcmp, 0xffcc494c)
// ALT: NSTUB(memcmp, 0xffcd0914) // 9/0
NSTUB(memcpy, 0xffcc4988)
NSTUB(memset, 0xffcc4a00)
// Best match: 54%
NSTUB(mkdir, 0xffe1da28)
// ALT: NSTUB(mkdir, 0xffe1daf0) // 17/14
NSTUB(open, 0xffcc9d58)
NSTUB(opendir, 0xffebfb04)
NSTUB(qsort, 0xffcc41ac)
NSTUB(rand, 0xffcc41d0)
// ALT: NSTUB(rand, 0xffcc41d0) // 8/0
NSTUB(read, 0xffcc9774)
NSTUB(readdir, 0xffebfa9c)
NSTUB(rename, 0xffcc9d60)
// ALT: NSTUB(rename, 0xffcc9d60) // 26/0
NSTUB(rewinddir, 0xffebfac4)
NSTUB(srand, 0xffcc41f4)
// ALT: NSTUB(srand, 0xffcc41f4) // 4/0
NSTUB(stat, 0xffebfb98)
NSTUB(strcat, 0xffcc4a20)
NSTUB(strchr, 0xffcc4a4c)
NSTUB(strcmp, 0xffcc4a70)
NSTUB(strcpy, 0xffcc4c04)
NSTUB(strlen, 0xffcc4d68)
NSTUB(strncmp, 0xffcc4dcc)
NSTUB(strncpy, 0xffcc4e10)
// ALT: NSTUB(strncpy, 0xffcc4e10) // 24/0
NSTUB(strpbrk, 0xffcc4e58)
NSTUB(strrchr, 0xffcc4e94)
// ALT: NSTUB(strrchr, 0xffcc4e94) // 8/0
NSTUB(strtol, 0xffcc45e8)
NSTUB(taskCreateHookAdd, 0xffccf3b4)
NSTUB(taskDeleteHookAdd, 0xffccf2f0)
// Best match: 82%
NSTUB(taskIdListGet, 0xffcd689c)
NSTUB(taskLock, 0xffcd6f58)
NSTUB(taskName, 0xffcd6794)
NSTUB(taskResume, 0xffcd6b78)
NSTUB(taskSuspend, 0xffcd69a4)
NSTUB(taskUnlock, 0xffcd7000)
NSTUB(time, 0xffcc62b8)
// ALT: NSTUB(time, 0xffcc62b8) // 25/0
// Best match: 57%
NSTUB(utime, 0xffebfc2c)
// ALT: NSTUB(utime, 0xffebfc2c) // 15/11
NSTUB(vsprintf, 0xffcc84bc)
NSTUB(write, 0xffcc97e4)
