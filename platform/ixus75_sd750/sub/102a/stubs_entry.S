// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 95%
NSTUB(AllocateMemory, 0xff8d1e48)
// ALT: NSTUB(AllocateMemory, 0xff8d1e48) // 23/1
NSTUB(AllocateUncacheableMemory, 0xff8de5b8)
// ERROR: Close is not found!
// Best match: 93%
NSTUB(CreatePhysicalVram, 0xffaf026c)
NSTUB(CreateTask, 0xffbe02ac)
NSTUB(CreateTaskStrict, 0xffbe134c)
NSTUB(DisableDispatch, 0xffbe00d0)
// ERROR: DisplayImagePhysicalScreen is not found!
NSTUB(EnableDispatch, 0xffbe015c)
NSTUB(ExecuteEventProcedure, 0xff8d4a6c)
NSTUB(ExitTask, 0xffbe066c)
NSTUB(Fclose_Fut, 0xffb61138)
NSTUB(Fopen_Fut, 0xffb610f8)
NSTUB(Fread_Fut, 0xffb611f4)
// Best match: 95%
NSTUB(FreeMemory, 0xff8d1e54)
// ALT: NSTUB(FreeMemory, 0xff8d1e54) // 23/1
// Best match: 90%
NSTUB(FreeUncacheableMemory, 0xff8de5ec)
NSTUB(Fseek_Fut, 0xffb612e8)
NSTUB(Fwrite_Fut, 0xffb61248)
NSTUB(GetCurrentAvValue, 0xffb1bb30)
// ALT: NSTUB(GetCurrentAvValue, 0xffb1e100) // 13/0
NSTUB(GetCurrentTargetDistance, 0xffb1e0a8)
// Best match: 90%
NSTUB(GetFocusLensSubjectDistance, 0xffb9e99c)
// ALT: NSTUB(GetFocusLensSubjectDistance, 0xffb9e99c) // 28/3
NSTUB(GetFocusLensSubjectDistanceFromLens, 0xffb9ee90)
// Best match: 86%
NSTUB(GetParameterData, 0xffc05990)
// Best match: 89%
NSTUB(GetPropertyCase, 0xff8dbcac)
// Best match: 96%
NSTUB(GetSystemTime, 0xff8d3700)
// ALT: NSTUB(GetSystemTime, 0xff8d3700) // 26/1
// Best match: 68%
NSTUB(GetZoomLensCurrentPoint, 0xffbb18dc)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffbb18dc) // 20/9
// Best match: 51%
NSTUB(GetZoomLensCurrentPosition, 0xffbb18f0)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffbb18f0) // 15/14
NSTUB(IsStrobeChargeCompleted, 0xffa6e7d4)
NSTUB(LockMainPower, 0xffc028a4)
// Best match: 61%
NSTUB(MakeDirectory, 0xffb65d20)
// ERROR: Mount_FileSystem is not found!
// Best match: 73%
NSTUB(MoveFocusLensToDistance, 0xffb1e340)
NSTUB(MoveZoomLensWithPoint, 0xffbb17b4)
// ALT: NSTUB(MoveZoomLensWithPoint, 0xffbb17b4) // 25/0
// Best match: 66%
NSTUB(Open, 0xffb659c8)
// Best match: 93%
NSTUB(PhySw_testgpio, 0xffafb2bc)
NSTUB(ProtectFile, 0xffb6061c)
// Best match: 92%
NSTUB(PutInNdFilter, 0xffb1bd14)
// ALT: NSTUB(PutInNdFilter, 0xffb1bd14) // 25/2
// Best match: 94%
NSTUB(PutOutNdFilter, 0xffb1bd5c)
// ALT: NSTUB(PutOutNdFilter, 0xffb1bd5c) // 16/1
// ERROR: Read is not found!
// Best match: 58%
NSTUB(RefreshPhysicalScreen, 0xff9d5ffc)
// ERROR: Remove is not found!
NSTUB(SetAutoShutdownTime, 0xffc027a8)
// Best match: 86%
NSTUB(SetParameterData, 0xffc058b0)
// Best match: 73%
NSTUB(SetPropertyCase, 0xff8dbb70)
NSTUB(SleepTask, 0xffbe01c0)
// Best match: 61%
NSTUB(TakeSemaphore, 0xffbdfc78)
NSTUB(UnlockMainPower, 0xffc0293c)
NSTUB(Unmount_FileSystem, 0xffb64dbc)
// Best match: 89%
NSTUB(UnsetZoomForMovie, 0xff8f69cc)
NSTUB(UpdateMBROnFlash, 0xffb64f10)
// Best match: 96%
NSTUB(VbattGet, 0xffaf7158)
// ERROR: Write is not found!
NSTUB(_log, 0xff9dd198)
// ALT: NSTUB(_log, 0xff9dd198) // 27/0
NSTUB(_log10, 0xff9d9f40)
// ALT: NSTUB(_log10, 0xff9d9f40) // 27/0
NSTUB(_pow, 0xff9da0c0)
// ALT: NSTUB(_pow, 0xff9da0c0) // 25/0
NSTUB(_sqrt, 0xff9dbf80)
// ALT: NSTUB(_sqrt, 0xff9dbf80) // 24/0
NSTUB(chdir, 0xff9e7c24)
// ALT: NSTUB(chdir, 0xff9e7c24) // 27/0
NSTUB(close, 0xff9e7564)
NSTUB(closedir, 0xffc1fab8)
// ERROR: free is not found!
NSTUB(ints_disable, 0xffbde35c)
NSTUB(ints_enable, 0xffbde368)
NSTUB(ioctl, 0xff9e76a4)
NSTUB(iosDevAdd, 0xff9e8784)
NSTUB(iosDrvInstall, 0xff9e8a48)
NSTUB(iosDevFind, 0xff9e8710)
NSTUB(isalpha, 0xff9deb3c)
// ALT: NSTUB(isalpha, 0xff9deb3c) // 4/0
NSTUB(isdigit, 0xff9deb6c)
// ALT: NSTUB(isdigit, 0xff9deb6c) // 4/0
NSTUB(islower, 0xff9deb9c)
// ALT: NSTUB(islower, 0xff9deb9c) // 4/0
NSTUB(isspace, 0xff9debe4)
// ALT: NSTUB(isspace, 0xff9debe4) // 4/0
NSTUB(isupper, 0xff9debfc)
// ALT: NSTUB(isupper, 0xff9debfc) // 4/0
NSTUB(kbd_p1_f, 0xffaf964c)
NSTUB(kbd_p1_f_cont, 0xffaf9658)
// Best match: 56%
NSTUB(kbd_p2_f, 0xffaf9a7c)
// Best match: 83%
NSTUB(kbd_pwr_off, 0xffaf8984)
// ALT: NSTUB(kbd_pwr_off, 0xffaf89a0) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffafb278) // 5/1
// ALT: NSTUB(kbd_pwr_off, 0xffafb294) // 5/1
// Best match: 55%
NSTUB(kbd_pwr_on, 0xffaf1aa8)
// ALT: NSTUB(kbd_pwr_on, 0xffaf1ad4) // 5/4
// ALT: NSTUB(kbd_pwr_on, 0xffaf1fd4) // 5/4
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NSTUB(localtime, 0xff9e33bc)
NSTUB(lseek, 0xff9e76a8)
// Best match: 53%
NSTUB(malloc, 0xff9ea5a4)
// ALT: NSTUB(malloc, 0xff9ea5a4) // 15/13
NSTUB(memcmp, 0xff9e279c)
// ALT: NSTUB(memcmp, 0xff9ee764) // 9/0
NSTUB(memcpy, 0xff9e27d8)
NSTUB(memset, 0xff9e2850)
// Best match: 51%
NSTUB(mkdir, 0xffb65c58)
// ALT: NSTUB(mkdir, 0xffb65d2c) // 16/15
NSTUB(open, 0xff9e7ba8)
NSTUB(opendir, 0xffc1faec)
NSTUB(qsort, 0xff9e1ffc)
NSTUB(rand, 0xff9e2020)
// ALT: NSTUB(rand, 0xff9e2020) // 8/0
NSTUB(read, 0xff9e75c4)
NSTUB(readdir, 0xffc1fa84)
NSTUB(rename, 0xff9e7bb0)
// ALT: NSTUB(rename, 0xff9e7bb0) // 26/0
NSTUB(rewinddir, 0xffc1faac)
NSTUB(srand, 0xff9e2044)
// ALT: NSTUB(srand, 0xff9e2044) // 4/0
NSTUB(stat, 0xffc1fb80)
NSTUB(strcat, 0xff9e2870)
NSTUB(strchr, 0xff9e289c)
NSTUB(strcmp, 0xff9e28c0)
NSTUB(strcpy, 0xff9e2a54)
NSTUB(strlen, 0xff9e2bb8)
NSTUB(strncmp, 0xff9e2c1c)
NSTUB(strncpy, 0xff9e2c60)
// ALT: NSTUB(strncpy, 0xff9e2c60) // 24/0
NSTUB(strpbrk, 0xff9e2ca8)
NSTUB(strrchr, 0xff9e2ce4)
// ALT: NSTUB(strrchr, 0xff9e2ce4) // 8/0
NSTUB(strtol, 0xff9e2438)
NSTUB(taskCreateHookAdd, 0xff9ed204)
NSTUB(taskDeleteHookAdd, 0xff9ed140)
// Best match: 82%
NSTUB(taskIdListGet, 0xff9f46ec)
NSTUB(taskLock, 0xff9f4da8)
NSTUB(taskName, 0xff9f45e4)
NSTUB(taskResume, 0xff9f49c8)
NSTUB(taskSuspend, 0xff9f47f4)
NSTUB(taskUnlock, 0xff9f4e50)
NSTUB(time, 0xff9e4108)
// ALT: NSTUB(time, 0xff9e4108) // 25/0
// Best match: 57%
NSTUB(utime, 0xffc1fc14)
// ALT: NSTUB(utime, 0xffc1fc14) // 15/11
NSTUB(vsprintf, 0xff9e630c)
NSTUB(write, 0xff9e7634)
NSTUB(fprintf, 0xff9df49c)
// ALT: NSTUB(fprintf, 0xff9e0c60) // 15/0
NSTUB(fputs, 0xff9df5bc)
NSTUB(puts, 0xff9e66c8)
