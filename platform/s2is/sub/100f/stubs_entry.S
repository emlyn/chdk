// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

// Best match: 79%
NSTUB(AllocateMemory, 0xff811ba0)
NSTUB(AllocateUncacheableMemory, 0xff814810)
// ERROR: Close is not found!
NSTUB(CreatePhysicalVram, 0xff93e4cc)
NSTUB(CreateTask, 0xff82239c)
NSTUB(CreateTaskStrict, 0xff823964)
NSTUB(DeleteFile_Fut, 0xff86fbf4)
NSTUB(DisableDispatch, 0xff82210c)
// ERROR: DisplayImagePhysicalScreen is not found!
NSTUB(EnableDispatch, 0xff822198)
NSTUB(ExecuteEventProcedure, 0xff816ab4)
NSTUB(ExitTask, 0xff82275c)
NSTUB(Fclose_Fut, 0xff86fd34)
NSTUB(Feof_Fut, 0xff86ff48)
NSTUB(Fflush_Fut, 0xff86ff80)
NSTUB(Fgets_Fut, 0xff86feb8)
NSTUB(Fopen_Fut, 0xff86fcf8)
NSTUB(Fread_Fut, 0xff86fe18)
// Best match: 66%
NSTUB(FreeMemory, 0xff811bac)
NSTUB(FreeUncacheableMemory, 0xff814844)
NSTUB(Fseek_Fut, 0xff86ff00)
NSTUB(Fwrite_Fut, 0xff86fe68)
NSTUB(GetCurrentAvValue, 0xffaa6d44)
// ALT: NSTUB(GetCurrentAvValue, 0xffaa8cf8) // 13/0
NSTUB(GetCurrentTargetDistance, 0xffaa8ca0)
// Best match: 87%
NSTUB(GetFocusLensSubjectDistance, 0xffa8e9ec)
// ALT: NSTUB(GetFocusLensSubjectDistance, 0xffa8e9ec) // 27/4
// ERROR: GetFocusLensSubjectDistanceFromLens is not found!
// Best match: 76%
NSTUB(GetParameterData, 0xff987fb8)
// ALT: NSTUB(GetParameterData, 0xff987fb8) // 23/7
// Best match: 71%
NSTUB(GetPropertyCase, 0xff825d04)
// Best match: 96%
NSTUB(GetSystemTime, 0xff814b98)
// ALT: NSTUB(GetSystemTime, 0xff814b98) // 26/1
// Best match: 68%
NSTUB(GetZoomLensCurrentPoint, 0xffa881f4)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffa881f4) // 20/9
// Best match: 51%
NSTUB(GetZoomLensCurrentPosition, 0xffa88208)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffa88208) // 15/14
NSTUB(IsStrobeChargeCompleted, 0xff912ee0)
// Best match: 96%
NSTUB(LockMainPower, 0xff9834c8)
// Best match: 70%
NSTUB(MakeDirectory, 0xff8775b0)
NSTUB(MakeDirectory_Fut, 0xff86fc80)
// ERROR: Mount_FileSystem is not found!
// Best match: 96%
NSTUB(MoveFocusLensToDistance, 0xffaa8f30)
// ERROR: MoveZoomLensWithPoint is not found!
// ERROR: Open is not found!
// ERROR: PhySw_testgpio is not found!
NSTUB(ProtectFile, 0xff86f360)
// Best match: 92%
NSTUB(PutInNdFilter, 0xffaa6d58)
// ALT: NSTUB(PutInNdFilter, 0xffaa6d58) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffaa6da0) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffaa6da0) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffaa7168) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffaa7168) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffaa88fc) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffaa88fc) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffaa8944) // 25/2
// ALT: NSTUB(PutInNdFilter, 0xffaa8944) // 25/2
// Best match: 94%
NSTUB(PutOutNdFilter, 0xffaa71b0)
// ALT: NSTUB(PutOutNdFilter, 0xffaa71b0) // 16/1
// ERROR: Read is not found!
NSTUB(RefreshPhysicalScreen, 0xff9988b4)
// Best match: 52%
NSTUB(Remove, 0xff8d290c)
NSTUB(RenameFile_Fut, 0xff86fb74)
// Best match: 96%
NSTUB(SetAutoShutdownTime, 0xff9833c0)
// Best match: 66%
NSTUB(SetParameterData, 0xff987fb4)
// ERROR: SetPropertyCase is not found!
NSTUB(SleepTask, 0xff8221fc)
// ALT: NSTUB(SleepTask, 0xff8222b0) // 31/0
NSTUB(TakeSemaphore, 0xff821b6c)
// Best match: 96%
NSTUB(UnlockMainPower, 0xff98357c)
NSTUB(Unmount_FileSystem, 0xff8762d4)
// ERROR: UnsetZoomForMovie is not found!
// Best match: 96%
NSTUB(UpdateMBROnFlash, 0xff876480)
// ERROR: VbattGet is not found!
// ERROR: Write is not found!
NSTUB(_log, 0xffae0ac0)
// ALT: NSTUB(_log, 0xffae0ac0) // 27/0
NSTUB(_log10, 0xffae1168)
// ALT: NSTUB(_log10, 0xffae1168) // 27/0
NSTUB(_pow, 0xffae1658)
// ALT: NSTUB(_pow, 0xffae1658) // 25/0
NSTUB(_sqrt, 0xffae59a4)
// ALT: NSTUB(_sqrt, 0xffae59a4) // 24/0
NSTUB(chdir, 0xffaf4c00)
// ALT: NSTUB(chdir, 0xffaf4c00) // 27/0
NSTUB(close, 0xffaf4540)
NSTUB(closedir, 0xffaf04e0)
NSTUB(errnoOfTaskGet, 0xffaf0cac)
// ERROR: free is not found!
NSTUB(ints_disable, 0xff81e254)
NSTUB(ints_enable, 0xff81e260)
NSTUB(ioctl, 0xffaf4680)
NSTUB(iosDevAdd, 0xffaf5760)
NSTUB(iosDevFind, 0xffaf56ec)
NSTUB(iosDrvInstall, 0xffaf5a24)
NSTUB(isalpha, 0xffaea454)
// ALT: NSTUB(isalpha, 0xffaea454) // 4/0
NSTUB(isdigit, 0xffaea484)
// ALT: NSTUB(isdigit, 0xffaea484) // 4/0
NSTUB(islower, 0xffaea4b4)
// ALT: NSTUB(islower, 0xffaea4b4) // 4/0
NSTUB(isspace, 0xffaea4fc)
// ALT: NSTUB(isspace, 0xffaea4fc) // 4/0
NSTUB(isupper, 0xffaea514)
// ALT: NSTUB(isupper, 0xffaea514) // 4/0
// ERROR: kbd_p1_f is not found!
// ERROR: kbd_p1_f_cont is not found!
// ERROR: kbd_p2_f is not found!
// Best match: 83%
NSTUB(kbd_pwr_off, 0xff82b0d4)
// ALT: NSTUB(kbd_pwr_off, 0xff82b0f0) // 5/1
// Best match: 55%
NSTUB(kbd_pwr_on, 0xff9402b0)
// ALT: NSTUB(kbd_pwr_on, 0xff9402dc) // 5/4
// ERROR: kbd_read_keys_r2 is not found!
// Best match: 93%
NSTUB(localtime, 0xffaeecd4)
NSTUB(lseek, 0xffaf4684)
// Best match: 53%
NSTUB(malloc, 0xffaf7580)
// ALT: NSTUB(malloc, 0xffaf7580) // 15/13
NSTUB(memcmp, 0xffaee0b4)
// ALT: NSTUB(memcmp, 0xffafc49c) // 9/0
NSTUB(memcpy, 0xffaee0f0)
NSTUB(memset, 0xffaee168)
// Best match: 61%
NSTUB(mkdir, 0xff8774fc)
// ALT: NSTUB(mkdir, 0xff8775bc) // 19/12
NSTUB(mktime, 0xffaeee9c)
NSTUB(open, 0xffaf4b84)
NSTUB(opendir, 0xffaf0514)
NSTUB(qsort, 0xffaed914)
NSTUB(rand, 0xffaed938)
// ALT: NSTUB(rand, 0xffaed938) // 8/0
NSTUB(read, 0xffaf45a0)
NSTUB(readdir, 0xffaf04ac)
NSTUB(rename, 0xffaf4b8c)
// ALT: NSTUB(rename, 0xffaf4b8c) // 26/0
NSTUB(rewinddir, 0xffaf04d4)
NSTUB(srand, 0xffaed95c)
// ALT: NSTUB(srand, 0xffaed95c) // 4/0
NSTUB(stat, 0xffaf05a8)
NSTUB(strcat, 0xffaee188)
NSTUB(strchr, 0xffaee1b4)
NSTUB(strcmp, 0xffaee1d8)
NSTUB(strcpy, 0xffaee36c)
NSTUB(strftime, 0xffaef9f4)
NSTUB(strlen, 0xffaee4d0)
NSTUB(strncmp, 0xffaee534)
NSTUB(strncpy, 0xffaee578)
// ALT: NSTUB(strncpy, 0xffaee578) // 24/0
NSTUB(strpbrk, 0xffaee5c0)
NSTUB(strrchr, 0xffaee5fc)
// ALT: NSTUB(strrchr, 0xffaee5fc) // 8/0
NSTUB(strtol, 0xffaedd50)
NSTUB(taskCreateHookAdd, 0xffafac00)
NSTUB(taskDeleteHookAdd, 0xffafab3c)
// Best match: 82%
NSTUB(taskIdListGet, 0xffb026e4)
NSTUB(taskLock, 0xffb02da0)
NSTUB(taskName, 0xffb025dc)
NSTUB(taskResume, 0xffb029c0)
NSTUB(taskSuspend, 0xffb027ec)
NSTUB(taskUnlock, 0xffb02e48)
NSTUB(time, 0xffaefa20)
// ALT: NSTUB(time, 0xffaefa20) // 25/0
NSTUB(utime, 0xffaf063c)
// ALT: NSTUB(utime, 0xffaf063c) // 26/0
NSTUB(vsprintf, 0xffaf1e00)
NSTUB(write, 0xffaf4610)
