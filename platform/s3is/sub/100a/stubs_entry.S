// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

NSTUB(AllocateMemory, 0xff811ac4)
NSTUB(AllocateUncacheableMemory, 0xff814cb0)
NSTUB(Close, 0xff8713c4)
NSTUB(CreatePhysicalVram, 0xff942824)
NSTUB(CreateTask, 0xff821658)
NSTUB(CreateTaskStrict, 0xff8226f8)
NSTUB(DisableDispatch, 0xff82147c)
// Best match: 96%
NSTUB(DisplayImagePhysicalScreen, 0xff941b58)
NSTUB(EnableDispatch, 0xff821508)
NSTUB(ExecuteEventProcedure, 0xff816bc8)
NSTUB(ExitTask, 0xff821a18)
NSTUB(FreeMemory, 0xff811ad0)
NSTUB(FreeUncacheableMemory, 0xff814ce4)
NSTUB(GetCurrentAvValue, 0xffb0a538)
// ALT: NSTUB(GetCurrentAvValue, 0xffb0c5dc) // 13/0
NSTUB(GetCurrentTargetDistance, 0xffb0c584)
// Best match: 83%
NSTUB(GetFocusLensSubjectDistance, 0xffaf007c)
// ALT: NSTUB(GetFocusLensSubjectDistance, 0xffaf007c) // 26/5
// Best match: 86%
NSTUB(GetParameterData, 0xff994b68)
NSTUB(GetPropertyCase, 0xff82498c)
// Best match: 96%
NSTUB(GetSystemTime, 0xff814ee8)
// ALT: NSTUB(GetSystemTime, 0xff814ee8) // 26/1
// Best match: 68%
NSTUB(GetZoomLensCurrentPoint, 0xffae8474)
// ALT: NSTUB(GetZoomLensCurrentPoint, 0xffae8474) // 20/9
// Best match: 51%
NSTUB(GetZoomLensCurrentPosition, 0xffae8488)
// ALT: NSTUB(GetZoomLensCurrentPosition, 0xffae8488) // 15/14
NSTUB(IsStrobeChargeCompleted, 0xff91d8c0)
NSTUB(LockMainPower, 0xff98f118)
NSTUB(MakeDirectory, 0xff871668)
// Best match: 73%
NSTUB(Mount_FileSystem, 0xff870190)
// ALT: NSTUB(Mount_FileSystem, 0xff870190) // 22/8
// Best match: 96%
NSTUB(MoveFocusLensToDistance, 0xffb0c824)
// ERROR: MoveZoomLensWithPoint is not found!
NSTUB(Open, 0xff87139c)
// Best match: 89%
NSTUB(PhySw_testgpio, 0xff82835c)
NSTUB(ProtectFile, 0xff869730)
NSTUB(Read, 0xff871458)
NSTUB(RefreshPhysicalScreen, 0xff9a7b10)
NSTUB(Remove, 0xff8713e4)
// Best match: 86%
NSTUB(SetParameterData, 0xff994a88)
NSTUB(SetPropertyCase, 0xff824870)
NSTUB(SleepTask, 0xff82156c)
NSTUB(TakeSemaphore, 0xff821068)
NSTUB(UnlockMainPower, 0xff98f1b0)
NSTUB(Unmount_FileSystem, 0xff870244)
NSTUB(UpdateMBROnFlash, 0xff8703ec)
// ERROR: VbattGet is not found!
NSTUB(Write, 0xff871464)
NSTUB(_log, 0xffb496c0)
// ALT: NSTUB(_log, 0xffb496c0) // 27/0
NSTUB(_log10, 0xffb45a60)
// ALT: NSTUB(_log10, 0xffb45a60) // 27/0
NSTUB(_pow, 0xffb45be8)
// ALT: NSTUB(_pow, 0xffb45be8) // 25/0
NSTUB(_sqrt, 0xffb47abc)
// ALT: NSTUB(_sqrt, 0xffb47abc) // 24/0
NSTUB(chdir, 0xffb54858)
// ALT: NSTUB(chdir, 0xffb54858) // 27/0
NSTUB(close, 0xffb54198)
NSTUB(closedir, 0xffb51620)
// ERROR: free is not found!
NSTUB(ints_disable, 0xff81dad8)
NSTUB(ints_enable, 0xff81dae4)
NSTUB(ioctl, 0xffb542d8)
NSTUB(iosDevAdd, 0xffb553b8)
NSTUB(iosDrvInstall, 0xffb5567c)
NSTUB(isalpha, 0xffb4b6c4)
// ALT: NSTUB(isalpha, 0xffb4b6c4) // 4/0
NSTUB(isdigit, 0xffb4b6f4)
// ALT: NSTUB(isdigit, 0xffb4b6f4) // 4/0
NSTUB(islower, 0xffb4b724)
// ALT: NSTUB(islower, 0xffb4b724) // 4/0
NSTUB(isspace, 0xffb4b76c)
// ALT: NSTUB(isspace, 0xffb4b76c) // 4/0
NSTUB(isupper, 0xffb4b784)
// ALT: NSTUB(isupper, 0xffb4b784) // 4/0
NSTUB(kbd_p1_f, 0xff826d64)
NSTUB(kbd_p1_f_cont, 0xff826d70)
NSTUB(kbd_p2_f, 0xff827140)
// Best match: 83%
NSTUB(kbd_pwr_off, 0xff82956c)
// ALT: NSTUB(kbd_pwr_off, 0xff829588) // 5/1
// Best match: 55%
NSTUB(kbd_pwr_on, 0xff944170)
// ALT: NSTUB(kbd_pwr_on, 0xff94419c) // 5/4
// Best match: 57%
NSTUB(kbd_read_keys_r2, 0xff827bf0)
// Best match: 93%
NSTUB(localtime, 0xffb4fe14)
NSTUB(lseek, 0xffb542dc)
// Best match: 53%
NSTUB(malloc, 0xffb571d8)
// ALT: NSTUB(malloc, 0xffb571d8) // 15/13
NSTUB(memcmp, 0xffb4f1f4)
// ALT: NSTUB(memcmp, 0xffb5bdb8) // 9/0
NSTUB(memcpy, 0xffb4f230)
NSTUB(memset, 0xffb4f2a8)
NSTUB(mkdir, 0xff8715ac)
NSTUB(open, 0xffb547dc)
NSTUB(opendir, 0xffb51654)
NSTUB(qsort, 0xffb4ea54)
NSTUB(rand, 0xffb4ea78)
// ALT: NSTUB(rand, 0xffb4ea78) // 8/0
NSTUB(read, 0xffb541f8)
NSTUB(readdir, 0xffb515ec)
NSTUB(rename, 0xffb547e4)
// ALT: NSTUB(rename, 0xffb547e4) // 26/0
NSTUB(rewinddir, 0xffb51614)
NSTUB(srand, 0xffb4ea9c)
// ALT: NSTUB(srand, 0xffb4ea9c) // 4/0
NSTUB(stat, 0xffb516e8)
NSTUB(strcat, 0xffb4f2c8)
NSTUB(strchr, 0xffb4f2f4)
NSTUB(strcmp, 0xffb4f318)
NSTUB(strcpy, 0xffb4f4ac)
NSTUB(strlen, 0xffb4f610)
NSTUB(strncmp, 0xffb4f674)
NSTUB(strncpy, 0xffb4f6b8)
// ALT: NSTUB(strncpy, 0xffb4f6b8) // 24/0
NSTUB(strpbrk, 0xffb4f700)
NSTUB(strrchr, 0xffb4f73c)
// ALT: NSTUB(strrchr, 0xffb4f73c) // 8/0
NSTUB(strtol, 0xffb4ee90)
NSTUB(taskCreateHookAdd, 0xffb5a858)
NSTUB(taskDeleteHookAdd, 0xffb5a794)
// Best match: 82%
NSTUB(taskIdListGet, 0xffb64820)
NSTUB(taskLock, 0xffb64edc)
NSTUB(taskName, 0xffb64718)
NSTUB(taskResume, 0xffb64afc)
NSTUB(taskSuspend, 0xffb64928)
NSTUB(taskUnlock, 0xffb64f84)
NSTUB(time, 0xffb50b60)
// ALT: NSTUB(time, 0xffb50b60) // 25/0
NSTUB(utime, 0xffb5177c)
// ALT: NSTUB(utime, 0xffb5177c) // 26/0
NSTUB(vsprintf, 0xffb52f40)
NSTUB(write, 0xffb54268)
NSTUB(Fclose_Fut, 0xff86a104)
NSTUB(Fopen_Fut, 0xff86a0c8)
NSTUB(Fread_Fut, 0xff86a1e8)
NSTUB(Fseek_Fut, 0xff86a2d0)
NSTUB(Fwrite_Fut, 0xff86a238)
