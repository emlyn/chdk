// !!! THIS FILE IS GENERATED. DO NOT EDIT. !!!
#include "stubs_asm.h"

NSTUB(AllocateMemory, 0xffa3d8b8)
NSTUB(AllocateUncacheableMemory, 0xff827b68)
NSTUB(Close, 0xff823af4)
NSTUB(CreateTask, 0xff81aef4)
NSTUB(DeleteFile_Fut, 0xff8233a0)
// ERROR: EnterToCompensationEVF is not found!
NSTUB(ExecuteEventProcedure, 0xff86db38)
// ERROR: ExitFromCompensationEVF is not found!
// Best match: 57%
NSTUB(ExitTask, 0xff81b184)
NSTUB(Fclose_Fut, 0xff82351c)
NSTUB(Feof_Fut, 0xff823708)
NSTUB(Fflush_Fut, 0xff823744)
NSTUB(Fgets_Fut, 0xff823670)
NSTUB(Fopen_Fut, 0xff8234dc)
NSTUB(Fread_Fut, 0xff8235c8)
NSTUB(FreeMemory, 0xffa3d8b0)
// Best match: 91%
NSTUB(FreeUncacheableMemory, 0xff827ba8)
NSTUB(Fseek_Fut, 0xff8236bc)
NSTUB(Fwrite_Fut, 0xff82361c)
NSTUB(GetBatteryTemperature, 0xff848cf4)
NSTUB(GetCCDTemperature, 0xff848c84)
NSTUB(GetCurrentAvValue, 0xff928280)
// Best match: 64%
NSTUB(GetCurrentTargetDistance, 0xff927344)
// Best match: 55%
NSTUB(GetDrive_ClusterSize, 0xff8554ac)
// ALT: NSTUB(GetDrive_ClusterSize, 0xff8554e0) // 15/12
// ALT: NSTUB(GetDrive_ClusterSize, 0xff855514) // 15/12
// ALT: NSTUB(GetDrive_ClusterSize, 0xff8554ac) // 14/12
// ALT: NSTUB(GetDrive_ClusterSize, 0xff855548) // 14/12
// Best match: 62%
NSTUB(GetDrive_FreeClusters, 0xff8554ac)
// Best match: 55%
NSTUB(GetDrive_TotalClusters, 0xff8554ac)
// ALT: NSTUB(GetDrive_TotalClusters, 0xff8554e0) // 15/12
// ALT: NSTUB(GetDrive_TotalClusters, 0xff855514) // 15/12
// Best match: 62%
NSTUB(GetFocusLensSubjectDistance, 0xffa3a710)
// Best match: 96%
NSTUB(GetOpticalTemperature, 0xff848d64)
// Best match: 96%
NSTUB(GetParameterData, 0xff95a770)
// Best match: 72%
NSTUB(GetPropertyCase, 0xff8717a8)
// Best match: 96%
NSTUB(GetSystemTime, 0xffa3d910)
// Best match: 74%
NSTUB(GetZoomLensCurrentPoint, 0xff92b9cc)
NSTUB(GetZoomLensCurrentPosition, 0xffa337f0)
// Best match: 67%
NSTUB(IsStrobeChargeCompleted, 0xff8ab714)
NSTUB(LocalTime, 0xff86b25c)
// Best match: 93%
NSTUB(LockMainPower, 0xff878ec8)
NSTUB(Lseek, 0xff823c34)
// Best match: 92%
NSTUB(MakeDirectory_Fut, 0xff823414)
// Best match: 69%
NSTUB(MoveFocusLensToDistance, 0xffa9e3fc)
// Best match: 58%
NSTUB(MoveZoomLensWithPoint, 0xffa3aec4)
// Best match: 62%
NSTUB(NewTaskShell, 0xff871250)
NSTUB(Open, 0xff823acc)
// Best match: 90%
NSTUB(PT_PlaySound, 0xff85f28c)
// Best match: 86%
NSTUB(PostLogicalEventForNotPowerType, 0xff876ca4)
// Best match: 92%
NSTUB(PostLogicalEventToUI, 0xff876cf0)
NSTUB(Read, 0xff819a4c)
NSTUB(ReadFastDir, 0xffa21ca0)
// ERROR: RefreshPhysicalScreen is not found!
NSTUB(Remove, 0xff823b3c)
// Best match: 93%
NSTUB(RenameFile_Fut, 0xff82334c)
// Best match: 93%
NSTUB(SetAutoShutdownTime, 0xff878f3c)
// Best match: 81%
NSTUB(SetCurrentCaptureModeType, 0xff8800bc)
NSTUB(SetFileTimeStamp, 0xff823dd0)
// Best match: 64%
NSTUB(SetLogicalEventActive, 0xff878c18)
// Best match: 96%
NSTUB(SetParameterData, 0xff95a6e0)
// Best match: 72%
NSTUB(SetPropertyCase, 0xff8716a0)
// Best match: 92%
NSTUB(SleepTask, 0xff8277ec)
// Best match: 60%
NSTUB(TakeSemaphore, 0xff8274b4)
// ERROR: TurnOffBackLight is not found!
// Best match: 54%
NSTUB(TurnOnBackLight, 0xff886060)
// Best match: 72%
NSTUB(UIFS_WriteFirmInfoToFile, 0xff94b858)
// Best match: 93%
NSTUB(UnlockMainPower, 0xff878e1c)
// Best match: 92%
NSTUB(UpdateMBROnFlash, 0xff8552ec)
// Best match: 85%
NSTUB(VbattGet, 0xff820570)
NSTUB(Write, 0xff823ba0)
NSTUB(_log, 0xffad3188)
NSTUB(_log10, 0xffad1e14)
NSTUB(_pow, 0xffad1f84)
NSTUB(_sqrt, 0xffad4de4)
NSTUB(close, 0xff819864)
NSTUB(closedir, 0xffa21d70)
NSTUB(closefastdir, 0xffa21d70)
NSTUB(free, 0xff813a7c)
// Best match: 86%
NSTUB(kbd_p1_f, 0xff821ca0)
// Best match: 86%
NSTUB(kbd_p1_f_cont, 0xff821cac)
// Best match: 89%
NSTUB(kbd_p2_f, 0xff8214b8)
// Best match: 51%
NSTUB(kbd_pwr_off, 0xff846260)
// ERROR: kbd_pwr_on is not found!
// Best match: 76%
NSTUB(kbd_read_keys, 0xff821ba4)
// Best match: 81%
NSTUB(kbd_read_keys_r2, 0xff845de0)
NSTUB(lseek, 0xff823c34)
NSTUB(malloc, 0xff8139a8)
NSTUB(memcmp, 0xff81cbb4)
NSTUB(memcpy, 0xff8928f4)
NSTUB(memset, 0xff9b8778)
NSTUB(mkdir, 0xff823e98)
NSTUB(mktime_ext, 0xff893160)
NSTUB(open, 0xff8197b4)
NSTUB(opendir, 0xffa21c0c)
NSTUB(openfastdir, 0xffa21c0c)
// Best match: 56%
NSTUB(qsort, 0xff9b87b8)
// Best match: 95%
NSTUB(rand, 0xff81ccbc)
NSTUB(read, 0xff819a4c)
NSTUB(readfastdir, 0xffa21ca0)
NSTUB(rename, 0xff823bc8)
// Best match: 95%
NSTUB(srand, 0xff81ccb0)
NSTUB(stat, 0xff823d00)
NSTUB(strcat, 0xff892708)
// ERROR: strchr is not found!
NSTUB(strcmp, 0xff81cb4c)
NSTUB(strcpy, 0xff81cb34)
NSTUB(strftime, 0xff892b68)
NSTUB(strlen, 0xff81cb90)
// Best match: 85%
NSTUB(strncmp, 0xff892744)
NSTUB(strncpy, 0xff82d678)
// Best match: 80%
NSTUB(strrchr, 0xff89278c)
NSTUB(strtol, 0xff82d8b0)
// Best match: 83%
NSTUB(time, 0xff86b83c)
NSTUB(vsprintf, 0xff81caf8)
NSTUB(write, 0xff819aac)
